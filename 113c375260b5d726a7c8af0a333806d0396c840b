{
  "comments": [
    {
      "key": {
        "uuid": "070b5f5c_adce6f8f",
        "filename": "ci-scripts/node_holder/node_holder.py",
        "patchSetId": 9
      },
      "lineNbr": 264,
      "author": {
        "id": 111
      },
      "writtenOn": "2021-12-17T10:52:56Z",
      "side": 1,
      "message": "Can we add a exception here if client.conf is not found so that people can request someone from infra to create a token.\n\n```\nvenv) [chandankumar@ovpn-9-75 node_holder]$ ./node_holder.py -a https://review.rdoproject.org/r/c/testproject/+/28446/63/.zuul.yaml\nTraceback (most recent call last):\n  File \"/home/chandankumar/src/code/review.rdoproject.org/rdo-infra/ci-config/ci-scripts/node_holder/./node_holder.py\", line 476, in \u003cmodule\u003e\n    add_node_workflow(args.add_using_autodetect, args.reason,\n  File \"/home/chandankumar/src/code/review.rdoproject.org/rdo-infra/ci-config/ci-scripts/node_holder/./node_holder.py\", line 317, in add_node_workflow\n    url, token, tenant \u003d extract_credentials_from_config(config)\n  File \"/home/chandankumar/src/code/review.rdoproject.org/rdo-infra/ci-config/ci-scripts/node_holder/./node_holder.py\", line 265, in extract_credentials_from_config\n    token \u003d config_parser[config][\u0027auth_token\u0027]\n  File \"/usr/lib64/python3.10/configparser.py\", line 964, in __getitem__\n    raise KeyError(key)\nKeyError: \u0027rdoproject.org\u0027\n\n```",
      "revId": "113c375260b5d726a7c8af0a333806d0396c840b",
      "serverId": "270e2033-b340-4cff-9539-693957ebf0e7",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "750675cf_931b9e57",
        "filename": "ci-scripts/node_holder/node_holder.py",
        "patchSetId": 9
      },
      "lineNbr": 264,
      "author": {
        "id": 671
      },
      "writtenOn": "2021-12-17T11:20:39Z",
      "side": 1,
      "message": "Good idea, adding in next patchset.",
      "parentUuid": "070b5f5c_adce6f8f",
      "revId": "113c375260b5d726a7c8af0a333806d0396c840b",
      "serverId": "270e2033-b340-4cff-9539-693957ebf0e7",
      "unresolved": false
    }
  ]
}