{
  "comments": [
    {
      "key": {
        "uuid": "e4e51827_7a2bdfb2",
        "filename": "molecule/tripleo_common_integration/prepare.yml",
        "patchSetId": 5
      },
      "lineNbr": 25,
      "author": {
        "id": 371
      },
      "writtenOn": "2020-09-21T08:23:38Z",
      "side": 1,
      "message": "You removed the test for zuul presence so this when will choke.",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 25,
        "endChar": 79
      },
      "revId": "81d4bd8e8afe355f270aba95c52a17e8bc0799ab",
      "serverId": "270e2033-b340-4cff-9539-693957ebf0e7",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e103c2ef_1a5de35b",
        "filename": "molecule/tripleo_common_integration/prepare.yml",
        "patchSetId": 5
      },
      "lineNbr": 25,
      "author": {
        "id": 192
      },
      "writtenOn": "2020-09-21T08:24:17Z",
      "side": 1,
      "message": "i guess it doesn\u0027t like that one? looking at the trace https://logserver.rdoproject.org/18/29518/5/check/mol-tripleo_common_integration/3868512/tox/reports.html\n\n    The conditional check \u0027\u0027opendev.org/openstack/python-tripleoclient\u0027 in zuul.projects\u0027 failed. The error was: error while evaluating conditional (\u0027opendev.org/openstack/python-tripleoclient\u0027 in zuul.projects): \u0027zuul\u0027 is undefined\n\n\n\n\u003d\u003d\u003d\u003d\nPreviously this was guarded by the \u0027when: zuul is defined\u0027 on the block. I am not sure how it can be that \u0027zuul is not defined though\u0027 ...",
      "range": {
        "startLine": 25,
        "startChar": 65,
        "endLine": 25,
        "endChar": 78
      },
      "revId": "81d4bd8e8afe355f270aba95c52a17e8bc0799ab",
      "serverId": "270e2033-b340-4cff-9539-693957ebf0e7",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85bf8e9e_efb3b7e5",
        "filename": "molecule/tripleo_common_integration/prepare.yml",
        "patchSetId": 5
      },
      "lineNbr": 25,
      "author": {
        "id": 192
      },
      "writtenOn": "2020-09-21T08:35:07Z",
      "side": 1,
      "message": "11:33 \u003c marios\u003e akahat: so you could try the full path.. when /python-tripleoclient in \n                /home/zuul/srz/src/opendev.org/openstack/python-tripleoclient\n11:34 \u003c marios\u003e sorry /src not srz but you know what i mean\n11:34 \u003c marios\u003e akahat: for the testing anyway",
      "parentUuid": "e103c2ef_1a5de35b",
      "range": {
        "startLine": 25,
        "startChar": 65,
        "endLine": 25,
        "endChar": 78
      },
      "revId": "81d4bd8e8afe355f270aba95c52a17e8bc0799ab",
      "serverId": "270e2033-b340-4cff-9539-693957ebf0e7",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bbe0ce47_e912cc3e",
        "filename": "zuul.d/jobs-mol.yaml",
        "patchSetId": 5
      },
      "lineNbr": 7,
      "author": {
        "id": 192
      },
      "writtenOn": "2020-09-21T08:24:17Z",
      "side": 1,
      "message": "these are fetched OK https://logserver.rdoproject.org/18/29518/5/check/mol-tripleo_common_integration/3868512/zuul-info/inventory.yaml\n\n      projects:\n        opendev.org/openstack/python-tripleoclient:\n          canonical_hostname: opendev.org\n          canonical_name: opendev.org/openstack/python-tripleoclient\n          checkout: master\n...",
      "revId": "81d4bd8e8afe355f270aba95c52a17e8bc0799ab",
      "serverId": "270e2033-b340-4cff-9539-693957ebf0e7",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "53f5fcd3_3edbe732",
        "filename": "zuul.d/jobs-mol.yaml",
        "patchSetId": 5
      },
      "lineNbr": 7,
      "author": {
        "id": 371
      },
      "writtenOn": "2020-09-21T08:27:23Z",
      "side": 1,
      "message": "That is good, as it will assure that zuul sideloads these. Still, we need to update our code logic to look for these folders presence and use upstream if not present, allowing it to be used with both cases: when these exists or not.\n\nA developer cloning current repo should not be forced to clone other repos to run tests.\n\nMaybe we can have an utility role \"ensure_required_project\" which does nothing when these folders already exists but clones them when they do not? It would make much easier to control the logic.",
      "range": {
        "startLine": 5,
        "startChar": 0,
        "endLine": 7,
        "endChar": 50
      },
      "revId": "81d4bd8e8afe355f270aba95c52a17e8bc0799ab",
      "serverId": "270e2033-b340-4cff-9539-693957ebf0e7",
      "unresolved": false
    }
  ]
}