---
- name: manifest create
  hosts: localhost
  become: yes
  become_user: root
  vars:
    containers_file: "parsed_containers-{{ distro_name }}-{{ distro_version }}-{{ lookup('env','RELEASE') }}.txt"
    dockerhub_namespace: "tripleo{{ lookup('env','RELEASE') }}"
    full_hash: "{{ lookup('env', 'FULL_HASH')}}"
    distro_name: "{{ lookup('env', 'DISTRO_NAME') }}"
    ppc_tag: "ppc64le"
    x86_tag: "x86_64"
  tasks:
    - name: Remove any docker packages before installing docker-ce
      package:
        name: "{{ item }}"
        state: absent
      become: true
      with_items:
        - docker
        - docker-client
        - docker-client-latest
        - docker-common
        - docker-latest
        - docker-latest-logrotate
        - docker-logrotate
        - docker-engine

    - name: Install docker-ce requirements
      package:
        name: "{{ item }}"
        state: present
      become: true
      with_items:
        - yum-utils
        - device-mapper-persistent-data
        - lvm2

    - name: Install docker-ce repo
      shell: >
        sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
      become: true

    - name: Install docker-ce packages
      package:
        name: "{{ item }}"
        state: present
      become: true
      with_items:
        - docker-ce
        - docker-ce-cli
        - containerd.io

    - name: register the containers list
      shell: >
        cat {{containers_file }}
      register: built_images

    - name: create and annotate manifest for each container
      shell: >
        export DOCKER_CLI_EXPERIMENTAL=enabled
        docker manifest create {{ dockerhub_namespace }}/{{ distro_name }}-binary-{{ item }}:{{ full_hash }} {{ dockerhub_namespace }}/{{ distro_name }}-binary-{{ item }}:{{ full_hash }}_{{ ppc_tag }} {{ dockerhub_namespace }}/{{ distro_name }}-binary-{{ item }}:{{ full_hash }}_{{ x86_tag }}
        docker manifest annotate {{ dockerhub_namespace }}/{{ distro_name }}-binary-{{ item }}:{{ full_hash }}_{{ ppc_tag }} --arch {{ ppc_tag }}
        docker manifest annotate {{ dockerhub_namespace }}/{{ distro_name }}-binary-{{ item }}:{{ full_hash }}_{{ x86_tag }} --arch amd64
      with_items: "{{ built_images.stdout_lines }}"

    - name: push container manifests
      shell: >
        export DOCKER_CLI_EXPERIMENTAL=enabled
        docker manifest push {{ dockerhub_namespace }}/{{ distro_name }}-binary-{{ item }}:{{ full_hash }}
      retries: 3
      with_items: "{{ built_images.stdout_lines }}"

