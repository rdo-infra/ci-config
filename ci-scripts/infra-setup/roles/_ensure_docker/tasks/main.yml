
- name: Package install
  become: true
  block:
    - name: Configure docker-ce repo
      command: yum-config-manager --add-repo \
          https://download.docker.com/linux/centos/docker-ce.repo

    # TODO(rfolco): Make me idempotent
    - name: Removed old/distro version of docker
      yum:
        name:
          - docker
          - docker-client
          - docker-client-latest
          - docker-common
          - docker-latest
          - docker-latest-logrotate
          - docker-logrotate
          - docker-engine
        state: absent

    - name: Install required packages
      yum:
        name:
          - logrotate
          - httpd
          - python-virtualenv
          - telegraf
          - yum-utils
          - device-mapper-persistent-data
          - lvm2
          - openssh
          - git
          - parted
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - parted
          - xfsprogs
          - policycoreutils
          - setools-console
          - ansible
          - python-docker-py
        state: present

- name: Set up external partition
  become: true
  block:
    # TODO(rfolco): Make me idempotent
    - name: Mount external volume - create a partition
      parted:
        device: "{{ docker_device }}"
        number: 1
        state: present

    - name: Be sure to reread partition table
      command: kpartx -a "{{ docker_device }}"

    - name: Mount external volume - create a filesystem
      filesystem:
        fstype: xfs
        dev: "{{ docker_partition }}"

    - name: create a mount folder
      file:
        path: /var/lib/docker
        state: directory

    - name: Mount external volume - mount the partition
      mount:
        path: /var/lib/docker
        src: "{{ docker_partition }}"
        fstype: xfs
        state: mounted

#
# Docker configuration
#
- name: Configure Docker
  become: true
  block:
    - name: Ensure docker dir exists
      file:
        path: /etc/docker
        state: directory

    - name: Configure overlay2 for docker
      copy:
        content: |
          {
              "storage-driver": "overlay2",
              "storage-opts": [
                "overlay2.override_kernel_check=true"
              ]
          }
        dest: /etc/docker/daemon.json
      become: true
      register: docker_config

- name: Reload, enable and start docker
  become: true
  block:
    - name: Reload docker if config was changed
      service:
        name: docker
        state: reloaded
      when: docker_config is changed

    - name: Start and enable Docker
      service:
        name: docker
        state: started
        enabled: yes

- name: Stat docker socket again
  become: true
  stat:
    path: "/var/run/docker.sock"
  register: docker_socket_stat

- name: Find out docker group name
  become: true
  shell: |
    set -euo pipefail
    getent group {{ docker_socket_stat.stat.gid }} | cut -d":" -f1 | head -1
  register: docker_group
  changed_when: false
  failed_when: false

- when: not docker_group.stdout
  become: true
  block:
    - name: Create docker group
      group:
        name: "docker_{{ docker_socket_stat.stat.gid }}"
        gid: "{{ docker_socket_stat.stat.gid }}"
        state: present

    - name: Storing new created docker group
      set_fact:
        docker_group:
          stdout: "docker_{{ docker_socket_stat.stat.gid }}"

- name: List groups for user
  become: true
  command: "groups {{ ansible_user }}"
  register: user_groups
  changed_when: false

- name: Check if user is in docker group
  become: true
  when: "docker_group.stdout not in user_groups.stdout"
  block:
    - name: Add user to docker group
      user:
        name: '{{ ansible_user }}'
        groups: '{{ docker_group.stdout }}'
        append: true
      register: groupadd

    - name: Reset connection for group add to take effect in the next tasks
      meta: reset_connection

- name: Create user config dir
  become: true
  become_user: "{{ ansible_user }}"
  file:
    path: "/home/{{ ansible_user }}/.docker/"
    owner: "{{ ansible_user }}"
    state: directory

- name: Enable experimental commands in user config
  become: true
  become_user: "{{ ansible_user }}"
  copy:
    content: |
      {
          "experimental": "enabled"
      }
    dest: "/home/{{ ansible_user }}/.docker/config.json"
