---
dependency:
  name: galaxy
driver:
  name: docker
lint:
  name: yamllint
log: true

platforms:
  - name: ${MOLECULE_PLATFORM:-centos7}
    hostname: ${MOLECULE_PLATFORM:-centos7}
    image: ${MOLECULE_IMAGE:-centos:7}
    privileged: True
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
      - /var/run/docker.sock:/tmp/docker.sock
    command: "/usr/sbin/init"
    dockerfile: ../Dockerfile.j2
    easy_install:
      - pip
    environment: &env
      http_proxy: "{{ lookup('env', 'http_proxy') }}"
      https_proxy: "{{ lookup('env', 'https_proxy') }}"
    registry:
      url: ${MOLECULE_CONTAINER_REGISTRY_URL:-docker.io}

provisioner:
  name: ansible
  env:
    ANSIBLE_STDOUT_CALLBACK: yaml
  inventory:
    host_vars:
      centos7:
        # Our role are usually run as unprivileged user
        # But not this one, this is usually run as root
        #ansible_user: unprivileged
        ansible_python_interpreter: "/usr/bin/python"
        ansible_user: root
      rhel8:
        ansible_python_interpreter: "/usr/bin/python3"
  lint:
    name: ansible-lint

scenario:
  test_sequence:
    - destroy
    - create
    - prepare
    - converge
    - destroy
