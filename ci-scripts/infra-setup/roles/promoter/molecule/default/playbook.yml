---
- hosts: centos7
  tasks:
    # use role defaults
    - include_vars:
        file: ../../defaults/main.yml

    - name: set local src dir for ci-config
      shell: "pwd"
      args:
        chdir: "{{ playbook_dir }}/../../../../../../"
      register: ci_config_dir
      delegate_to: localhost
      changed_when: false

    - name: set vars for molecule env
      set_fact:
        ci_config_local_src_dir: "{{ ci_config_dir.stdout }}"
        molecule_testing: true
        setup_staging: true

    - name: Stat for local registry secrets file
      stat:
        path: "{{ local_path_registry_secret }}"
      register: registry_secret_local
      delegate_to: localhost
      tags:
        - provisioning
    #
    # Create credentials (MOLECULE)
    #
    - name: Inject registry_secret_local
      copy:
        content: export REGISTRY_PASSWORD='test'
        dest: "{{ local_path_registry_secret }}"
      delegate_to: localhost

    - name: Inject dlrnapi_secret_local
      copy:
        content: export DLRNAPI_PASSWORD='test'
        dest: "{{ local_path_dlrnapi_secret }}"
      delegate_to: localhost
      tags:
        - provisioning

    - name: save fake static uploader key locally
      copy:
        content: |
            -----BEGIN RSA PRIVATE KEY-----
            MIIEowIBAAKCAQEAvJ5+qg0sA9rHFouk+tQeBq+FDDqHwzLTd1oyMFl+47Fp89jg
            6njfyBmJEyIeGA/AA1njMHDfHC1IWTN/9cgnxcN//gwtRVIsnDRMG8ylwqJNuKKa
            av7Xnxcu6N8PEYRjzRP8nMsCXVev+zi6Y8RdNsH9AOl/S4x+ms2aEs7b7ePI9pgK
            jvrxlKqyO0KVNXXk61s4SBMG+bcEjTNnzzCy5PiV9hlMuw5YERuVV5dMB6rskN5N
            o1O4bc102og1YzIwPAsqp0Hul2o9sKWl9CHcjIhLdx0U9hI2xVqF46+jG/hLlAX6
            kZ8rryxA4jSlxeIP9rDGR5lvwk7H9a7C0mdzLQIDAQABAoIBAQC34/YtqEXfRC6R
            ZnfkK2VSs1CNiYrO3gCY/hCsXrR9HHzlxe4R6uKR3YNsafjZEJHtMndyxLhgai18
            +d6pKwjLoDxq3EhOqzze1YXWHIEG7uHDPpQ5+FcTvbB4TPAN7fq29+NyoeGeS11B
            Gh9uIQWX2yzk9MCsUT8lgYnTCGYW2C3DpuUgajDjhq63NMEYpDnDMCu+SZpTzhfg
            gwpapf7Y93q4X5yDtFrxqaOPHB9h0cSTeJos7Vf25rDud5q/wcJW2azI+WgpgVDP
            uTgeEOjOKN1xH0ebBnmHYSVSfj9iQZdanRxsjcjBtiVzwGaE2gkJuWBeaRhradWU
            9gDujipBAoGBAOoREZOhDmWMqVRuz+536D8ewER2qE+zNt4+KLZatkrVOD14D1AW
            FCWg382sFgJyXB1EKdkp/94B++FBmcwY9YpI4zCRzbNxLXQXtJCIguujCGetlLzl
            wJyj1AiQnvuAJWqtWFAWv126eAvje6AS/Et44IrxOTw/RjMIQ/pLAEV5AoGBAM5L
            M/kLLNko/2kCd6qa8ltZq9MbJD6na19cX0cewDIzUioYmQEUGhZV9rNei/2+8LE6
            lxZ20DUlfdap8PqKhn16+RnIHf7k1934lHuh7kLNr9OoFRH2YSVGJK9L83RxIhVQ
            qPlZEsu0x0gt35jZeq26Chx8tqMWLBWmQL8BxPJVAoGAVD+iiPWufeS8ShS8qQPl
            x1plL/9Zo55JAIN1GfXaqWLHpHBjapsX01dtVtU68tSAzVPskCrq2tjx9WksV2cg
            cg68H45LcOwqxR+HMYLBRNlgvBihccBsrLTXK+IKJ1I/pX8RS3p0lOL6NKVDqSFM
            SEoQ4FHlHQdVWCcAeMWoKlkCgYBn3B7PfJvYvTZRxQdAYoAwE6ZZQ2ntDVcWjKf/
            Y3D6FTKBtR6bF2bG5gKtbaVnXBFL+SaGDc1nZHfFcou7Z7CsThRJsaHAabBwtazz
            zaPqCCpEknQBNhzUqkrf4oowjqDNQG3CE+FNo7dNFKNlDeEgw/BBRVyiIRCS2b/x
            Kk/gfQKBgA+GWI6bjA0zGdjBsElaX0tt3vtJN1rZW/fYSA3FZ2KvdPTxmP/N0pzZ
            PXOzGohcXPGPYFALq1XO8NqDnzVD6sokwkD/n1UKiDOmrB+iRuBXzAleECLarIzi
            WAsyy1Jag5MFgLJysZEKUDPtFWvsrs3gdn63GcrqkOH85a2Y/X2U
            -----END RSA PRIVATE KEY-----
        dest: "{{ local_path_uploader_key }}"
      delegate_to: localhost
      tags:
        - provisioning
#
# While testing, we usually not provisioning a second disk for the server
# So we emulate the second disk with a loopback device
#

    - name: Begin production code
      become: true
      block:
        - name: Promoter provisioning
          include_role:
            name: promoter
            tasks_from: setup_loop
          tags:
            - provisioning

        - name: promoter staging provisioning
          include_role:
            name: promoter
          tags:
            - provisioning

        - name: Run credentials setup
          include_role:
            name: promoter
            tasks_from: update_credentials
          tags:
            - provisioning

        # the test requirements are usually run only by tox
        # so when we are testing, it's nice to have them in the same virtual env
        - name: install test requirements
          become: true
          become_user: "{{ promoter_user }}"
          pip:
            requirements: "{{ ci_config_remote_src_dir }}/test-requirements.txt"
            virtualenv: "/home/{{ promoter_user }}/promoter_venv"
          tags:
            - provisioning

    - include_tasks: functional_tests.yml
      tags:
        - functional

    - name: Stage setup
      include_role:
        name: promoter
        tasks_from: setup_staging
      tags:
        - staging

    - name: Test Staging Setup
      debug:
        msg: |
          Not Implemented. This part should test that all ansible elements
          in staging setup are working correctly
          1) check that dlrn API is up
          2) check that registries are up
          3) check that base image is created
      tags:
        - staging

    - name: Cleanup promoter staging
      include_role:
        name: promoter
        tasks_from: teardown
      tags:
       - staging_cleanup
