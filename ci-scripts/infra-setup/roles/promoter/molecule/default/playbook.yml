---
- hosts: centos7
  vars:
    manifest_containers: "base\nrabbitmq" # centos-binary-base, centos-binary-rabbitmq
    registry_api: "https://trunk.registry.rdoproject.org:8443/oapi/v1/namespaces/tripleomaster/imagestreamtags"
    full_hash: b1e8b74033769f79bc7913e5bbd85bf4fd50c9b9_f2e9ca6b
    distro_name: centos
    rdoproject_namespace: tripleomaster
    dockerhub_namespace: tripleomaster
    ppc_tag: ppc64le
    x86_tag: x86_64
    localhost_registry_container: manifest-local-registry
  tasks:
    # use role defaults
    - include_vars:
        file: ../../defaults/main.yml
    - name: set local src dir for ci-config
      shell: "pwd"
      args:
        chdir: "{{ playbook_dir }}/../../../../../../"
      register: ci_config_dir
      delegate_to: localhost
    - name: set vars for molecule env
      set_fact:
        ci_config_local_src_dir: "{{ ci_config_dir.stdout }}"
        molecule_testing: true
        setup_staging: true

    - name: Stat for local registry secrets file
      stat:
        path: "{{ local_path_registry_secret }}"
      register: registry_secret_local
      delegate_to: localhost
      tags:
        - provisioning
    #
    # Create credentials (MOLECULE)
    #
    - name: Inject registry_secret_local
      copy:
        content: export REGISTRY_PASSWORD='test'
        dest: "{{ local_path_registry_secret }}"
      delegate_to: localhost

    - name: Inject dlrnapi_secret_local
      copy:
        content: export DLRNAPI_PASSWORD='test'
        dest: "{{ local_path_dlrnapi_secret }}"
      delegate_to: localhost
      tags:
        - provisioning

    - name: save fake static uploader key locally
      copy:
        content: |
            -----BEGIN RSA PRIVATE KEY-----
            MIIEowIBAAKCAQEAvJ5+qg0sA9rHFouk+tQeBq+FDDqHwzLTd1oyMFl+47Fp89jg
            6njfyBmJEyIeGA/AA1njMHDfHC1IWTN/9cgnxcN//gwtRVIsnDRMG8ylwqJNuKKa
            av7Xnxcu6N8PEYRjzRP8nMsCXVev+zi6Y8RdNsH9AOl/S4x+ms2aEs7b7ePI9pgK
            jvrxlKqyO0KVNXXk61s4SBMG+bcEjTNnzzCy5PiV9hlMuw5YERuVV5dMB6rskN5N
            o1O4bc102og1YzIwPAsqp0Hul2o9sKWl9CHcjIhLdx0U9hI2xVqF46+jG/hLlAX6
            kZ8rryxA4jSlxeIP9rDGR5lvwk7H9a7C0mdzLQIDAQABAoIBAQC34/YtqEXfRC6R
            ZnfkK2VSs1CNiYrO3gCY/hCsXrR9HHzlxe4R6uKR3YNsafjZEJHtMndyxLhgai18
            +d6pKwjLoDxq3EhOqzze1YXWHIEG7uHDPpQ5+FcTvbB4TPAN7fq29+NyoeGeS11B
            Gh9uIQWX2yzk9MCsUT8lgYnTCGYW2C3DpuUgajDjhq63NMEYpDnDMCu+SZpTzhfg
            gwpapf7Y93q4X5yDtFrxqaOPHB9h0cSTeJos7Vf25rDud5q/wcJW2azI+WgpgVDP
            uTgeEOjOKN1xH0ebBnmHYSVSfj9iQZdanRxsjcjBtiVzwGaE2gkJuWBeaRhradWU
            9gDujipBAoGBAOoREZOhDmWMqVRuz+536D8ewER2qE+zNt4+KLZatkrVOD14D1AW
            FCWg382sFgJyXB1EKdkp/94B++FBmcwY9YpI4zCRzbNxLXQXtJCIguujCGetlLzl
            wJyj1AiQnvuAJWqtWFAWv126eAvje6AS/Et44IrxOTw/RjMIQ/pLAEV5AoGBAM5L
            M/kLLNko/2kCd6qa8ltZq9MbJD6na19cX0cewDIzUioYmQEUGhZV9rNei/2+8LE6
            lxZ20DUlfdap8PqKhn16+RnIHf7k1934lHuh7kLNr9OoFRH2YSVGJK9L83RxIhVQ
            qPlZEsu0x0gt35jZeq26Chx8tqMWLBWmQL8BxPJVAoGAVD+iiPWufeS8ShS8qQPl
            x1plL/9Zo55JAIN1GfXaqWLHpHBjapsX01dtVtU68tSAzVPskCrq2tjx9WksV2cg
            cg68H45LcOwqxR+HMYLBRNlgvBihccBsrLTXK+IKJ1I/pX8RS3p0lOL6NKVDqSFM
            SEoQ4FHlHQdVWCcAeMWoKlkCgYBn3B7PfJvYvTZRxQdAYoAwE6ZZQ2ntDVcWjKf/
            Y3D6FTKBtR6bF2bG5gKtbaVnXBFL+SaGDc1nZHfFcou7Z7CsThRJsaHAabBwtazz
            zaPqCCpEknQBNhzUqkrf4oowjqDNQG3CE+FNo7dNFKNlDeEgw/BBRVyiIRCS2b/x
            Kk/gfQKBgA+GWI6bjA0zGdjBsElaX0tt3vtJN1rZW/fYSA3FZ2KvdPTxmP/N0pzZ
            PXOzGohcXPGPYFALq1XO8NqDnzVD6sokwkD/n1UKiDOmrB+iRuBXzAleECLarIzi
            WAsyy1Jag5MFgLJysZEKUDPtFWvsrs3gdn63GcrqkOH85a2Y/X2U
            -----END RSA PRIVATE KEY-----
        dest: "{{ local_path_uploader_key }}"
      delegate_to: localhost
      tags:
        - provisioning
#
# While testing, we usually not provisioning a second disk for the server
# So we emulate the second disk with a loopback device
#
    - include_role:
        name: promoter
        tasks_from: setup_loop
      tags:
        - provisioning

    - name: promoter staging provisioning
      include_role:
        name: promoter
      tags:
        - provisioning

    - include_tasks: functional_tests.yml
      tags:
        - functional

    - name: Test promoter container manifest-push.yml
      environment:
        DOCKER_HOST: unix:///tmp/docker.sock
        # The experimental commands are enabled globally for the promoter_user already
        #DOCKER_CLI_EXPERIMENTAL: enabled
        # This is a deamon opt, it has no effect on the client
        #DOCKER_OPTS: "--insecure-registry {{ manifest_registry }}"
      block:
      #- install docker for docker_image module
      # This could be installed elsewhere, and would need a become:
      - name: Pip install docker for docker_image module used by manifest-push
        shell: |
          pip install docker

      #- register built_images result from manifest_containers var
      - name: Register the built_images for manifest-push testing
        shell: |
          echo "{{ manifest_containers }}"
        register: built_images

      #- run the manifest-push tasks
      - include_tasks: ../../../../../container-push/manifest-push.yml

      #- include_tasks: manifest-push-tests.yml

      always:
      #- cleanup stop and remove local registry
      # Where is this started ?
      - name: 'Stop and remove {{ localhost_registry_container }}'
        shell: |
          docker container stop {{ localhost_registry_container }}
          docker container rm {{ localhost_registry_container }}

    - name: Stage setup
      include_role:
        name: promoter
        tasks_from: setup_staging
      tags:
        - staging

    - name: Staged promotion run
      block:
        - name: Try promotion_run
          include_role:
            name: promoter
            tasks_from: promotion_run
          tags:
           - staging

    - name: Cleanup promoter staging
      include_role:
        name: promoter
        tasks_from: teardown
      tags:
       - staging_cleanup
