# This tasks set handle credentials for testing and can be called in standalone mode
# to update credentials on the server, from a local set of credential files

---
- name: Stat for local credentials
  become: false
  block:
    - name: Stat for local dlrnapi secrets file
      stat:
        path: "{{ local_path_dlrnapi_secret }}"
      register: dlrnapi_secret_local
      delegate_to: localhost

    - name: Stat for local registry secrets file
      stat:
        path: "{{ local_path_registry_secret }}"
      register: registry_secret_local
      delegate_to: localhost

    - name: Stat for uploader_key file
      stat:
        path: "{{ local_path_uploader_key }}"
      register: uploader_key_local
      delegate_to: localhost

# Do not attempt to upload credentials if they are already there.
# When this role is run as CD, this will prevent the files from being uploaded
# and generated over and over again.
- name: Handle credentials for standalone environment
  when:
    - dlrnapi_secret_local.stat.exists
    - registry_secret_local.stat.exists
    - uploader_key_local.stat.exists
  block:
    - name: Copy secrets
      become: true
      become_user: "{{ promoter_user }}"
      copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        force: true
      with_items:
        - src: "{{ local_path_dlrnapi_secret }}"
          dest: "{{ remote_path_dlrnapi_secret }}"
        - src: "{{ local_path_registry_secret }}"
          dest: "{{ remote_path_registry_secret }}"
        - src: "{{ local_path_uploader_key }}"
          dest: "{{ remote_path_uploader_key }}"

    - name: Change key file permission
      become: true
      become_user: "{{ promoter_user }}"
      file:
        path: "{{ remote_path_uploader_key }}"
        mode: 0600

    - name: Generate public key from private key for uploader user
      become: true
      become_user: "{{ promoter_user }}"
      shell: >
        ssh-keygen -y -t rsa -q -C '' -N '' -f {{ remote_path_uploader_key }} > {{ remote_path_uploader_key }}.pub

#
# Credentials check (ALL)
#
- name: Stat for dlrnapi secrets file on instance
  stat:
    path: "{{ remote_path_dlrnapi_secret }}"
  register: remote_dlrnapi_secret

- name: Stat for registry secrets file on instance
  stat:
    path: "{{ remote_path_registry_secret }}"
  register: remote_registry_secret

- name: Stat for uploader_key on instance
  become: true # chmod 600
  stat:
    path: "{{ remote_path_uploader_key }}"
  register: remote_uploader_key

- name: Check if we have any credential to use.
  assert:
    that: >
      remote_dlrnapi_secret.stat.exists
      or remote_registry_secret.stat.exists
      or remote_uploader_key.stat.exists
    fail_msg: Credentials are missing, installation cannot continue
    success_msg: All credentials present

- name: Fix owners of the files
  become: true
  file:
    path: '{{ item }}'
    mode: '0600'
    owner: "{{ promoter_user }}"
  with_items:
      - "{{ remote_path_dlrnapi_secret  }}"
      - "{{ remote_path_registry_secret  }}"
      - "{{ remote_path_uploader_key  }}"
