---
- name: Install reproducer
  copy:
    src: "{{ item }}"
    dest: "{{ install_path }}"
  with_items:
    - playbooks
    - projects
    - docker-compose.yaml
    - httpd.conf
    - logs-Dockerfile

- name: Create configuration directories
  file:
    name: "{{ install_path }}/{{ item }}"
    state: directory
  with_items:
    - etc_nodepool
    - etc_zuul

- name: Generate nodepool configuration
  template:
    src: nodepool.yaml.j2
    dest: "{{ install_path }}/etc_nodepool/nodepool.yaml"

- name: Generate zuul configuration
  template:
    src: "{{ item }}.j2"
    dest: "{{ install_path }}/etc_zuul/{{ item }}"
  with_items:
    - zuul.conf
    - main.yaml

- name: Open needed ports at default security group
  os_security_group_rule:
    cloud: "{{ os_cloud_name }}"
    security_group: default
    protocol: tcp
    port_range_min: "{{ item }}"
    port_range_max: "{{ item }}"
    remote_ip_prefix: 0.0.0.0/0
  with_items:
    - 19885
    - 22

- name: Get installed images names
  os_image_facts:
    cloud: "{{ os_cloud_name }}"

- name: Check image are uploaded
  fail:
    msg: |
      Cannot find {{ item }} at the openstack cloud, you can upload one from
      https://nb02.openstack.org/images/ and add your ssh pub key with
      virt-edit and upload it to your openstack cloud.
  when: openstack_image | selectattr( 'name', 'equalto', item ) | list | length == 0
  with_items:
    - "{{ os_centos7_image }}"
    - "{{ os_fedora28_image }}"

- name: Start docker
  become: true
  service:
    name: docker
    state: started

- name: Start up zuul and friends
  docker_service:
    project_src: "{{ install_path }}"
    state: present
    build: true


- name: Wait for zuul upstream tenant
  uri:
    url: "http://localhost:9000/api/tenant/upstream/status"
    method: GET
    return_content: true
    status_code: 200
    body_format: json
  register: result
  retries: 60
  delay: 10
  until: result.status == 200 and result.json["zuul_version"] is defined
  changed_when: false

- name: Show banner
  vars:
    banner: |
      Now a local openstack tripleo ci environment has being installed at this
      system to use it you can acces to the following links and use it as a
      normal zuul + gerrit system.

      Gerrit: http://localhost:8080
      Zuul: http://localhost:9000
      Docker compose: {{ install_path }}

      To trigger jobs:
        - git clone http://localhost:8080/test1
        - Add a zuul.yaml with content like this:
          - project:
            check:
              jobs:
                - tripleo-ci-centos-7-scenario002-standalone
        - git review it

      You can also comment with 'recheck' at local gerrit to spin a job
      already commited

  debug:
    msg: "{{ banner.split('\n') }}"
