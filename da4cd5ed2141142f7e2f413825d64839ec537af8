{
  "comments": [
    {
      "key": {
        "uuid": "3dbbe15a_f26e602d",
        "filename": "ci-scripts/dlrnapi_promoter/tests/staging-setup/promoter_test.py",
        "patchSetId": 58
      },
      "lineNbr": 13,
      "author": {
        "id": 63
      },
      "writtenOn": "2019-09-30T15:10:47Z",
      "side": 1,
      "message": "best practice: import should be in alphabetical order",
      "revId": "da4cd5ed2141142f7e2f413825d64839ec537af8",
      "serverId": "270e2033-b340-4cff-9539-693957ebf0e7",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eb13d84f_b1c027db",
        "filename": "ci-scripts/dlrnapi_promoter/tests/staging-setup/promoter_test.py",
        "patchSetId": 58
      },
      "lineNbr": 47,
      "author": {
        "id": 63
      },
      "writtenOn": "2019-09-30T15:10:47Z",
      "side": 1,
      "message": "assert accepts a second argument in case of Assertion error\nassert True, \"Failed\" will add \"failed to the exception. So there\u0027s no need to explicitly catch the exception",
      "revId": "da4cd5ed2141142f7e2f413825d64839ec537af8",
      "serverId": "270e2033-b340-4cff-9539-693957ebf0e7",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c0d91729_926047cf",
        "filename": "ci-scripts/dlrnapi_promoter/tests/staging-setup/promoter_test.py",
        "patchSetId": 58
      },
      "lineNbr": 52,
      "author": {
        "id": 63
      },
      "writtenOn": "2019-09-30T15:10:47Z",
      "side": 1,
      "message": "It\u0027s debated wheter it\u0027s better to use string conctenation or formatting. In general seems that formatting is preferred for a few reasons: Readibility, performance, flexibility. In logging for example it\u0027s always preferable to use formatting. I\u0027ll move all the strings to formatting and then we can compare.",
      "revId": "da4cd5ed2141142f7e2f413825d64839ec537af8",
      "serverId": "270e2033-b340-4cff-9539-693957ebf0e7",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "acb3e2b5_4ced2d8e",
        "filename": "ci-scripts/dlrnapi_promoter/tests/staging-setup/promoter_test.py",
        "patchSetId": 58
      },
      "lineNbr": 55,
      "author": {
        "id": 63
      },
      "writtenOn": "2019-09-30T15:10:47Z",
      "side": 1,
      "message": "this branch is not needed anymore, but I wanted to point out, raise without argument rereais the last raised exception, so in this case the e in raise e is not needed as AssertionError is the last exception that wa raised.",
      "revId": "da4cd5ed2141142f7e2f413825d64839ec537af8",
      "serverId": "270e2033-b340-4cff-9539-693957ebf0e7",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4dbc3a5e_36d63d4e",
        "filename": "ci-scripts/dlrnapi_promoter/tests/staging-setup/promoter_test.py",
        "patchSetId": 58
      },
      "lineNbr": 66,
      "author": {
        "id": 63
      },
      "writtenOn": "2019-09-30T15:10:47Z",
      "side": 1,
      "message": "base_url specifies the address of the server, not the registry that will be used.",
      "revId": "da4cd5ed2141142f7e2f413825d64839ec537af8",
      "serverId": "270e2033-b340-4cff-9539-693957ebf0e7",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8dba5171_1bdc29de",
        "filename": "ci-scripts/dlrnapi_promoter/tests/staging-setup/promoter_test.py",
        "patchSetId": 58
      },
      "lineNbr": 72,
      "author": {
        "id": 63
      },
      "writtenOn": "2019-09-30T15:10:47Z",
      "side": 1,
      "message": "THis is now provided directly by the stage-info.yaml created by staging environment script, I\u0027ll modify this to match the new format.\nOn a different level, generally open files should be also closed. open can be used as context manager, so you can use \"with open(file): do_stuff\" and the file will be close automatically\nIn this case",
      "revId": "da4cd5ed2141142f7e2f413825d64839ec537af8",
      "serverId": "270e2033-b340-4cff-9539-693957ebf0e7",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6db17b3b_08d6fc74",
        "filename": "ci-scripts/dlrnapi_promoter/tests/staging-setup/promoter_test.py",
        "patchSetId": 58
      },
      "lineNbr": 81,
      "author": {
        "id": 63
      },
      "writtenOn": "2019-09-30T15:10:47Z",
      "side": 1,
      "message": "I was mislead but get_registry_data too, in reality the best way to check for images in a repository is to use API calls directly to the registry, and should work whether it\u0027s local or remote",
      "revId": "da4cd5ed2141142f7e2f413825d64839ec537af8",
      "serverId": "270e2033-b340-4cff-9539-693957ebf0e7",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3325556e_1b8d4f48",
        "filename": "ci-scripts/dlrnapi_promoter/tests/staging-setup/promoter_test.py",
        "patchSetId": 58
      },
      "lineNbr": 85,
      "author": {
        "id": 63
      },
      "writtenOn": "2019-09-30T15:10:47Z",
      "side": 1,
      "message": "sequantials except work only if you want to check for different errors on the first try: condition. If you want to catch an exception while handling another exception, you hav eto add another whole try: except block",
      "revId": "da4cd5ed2141142f7e2f413825d64839ec537af8",
      "serverId": "270e2033-b340-4cff-9539-693957ebf0e7",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b0abbc8_ea576759",
        "filename": "ci-scripts/dlrnapi_promoter/tests/staging-setup/promoter_test.py",
        "patchSetId": 58
      },
      "lineNbr": 104,
      "author": {
        "id": 63
      },
      "writtenOn": "2019-09-30T15:10:47Z",
      "side": 1,
      "message": "imports should be at the top.\npysftp is beta and last release was on 2016.",
      "revId": "da4cd5ed2141142f7e2f413825d64839ec537af8",
      "serverId": "270e2033-b340-4cff-9539-693957ebf0e7",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cff71202_bfff7207",
        "filename": "ci-scripts/dlrnapi_promoter/tests/staging-setup/promoter_test.py",
        "patchSetId": 58
      },
      "lineNbr": 116,
      "author": {
        "id": 63
      },
      "writtenOn": "2019-09-30T15:10:47Z",
      "side": 1,
      "message": "Same as above with assert and raise",
      "revId": "da4cd5ed2141142f7e2f413825d64839ec537af8",
      "serverId": "270e2033-b340-4cff-9539-693957ebf0e7",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aae531ff_f939a963",
        "filename": "ci-scripts/dlrnapi_promoter/tests/staging-setup/promoter_test.py",
        "patchSetId": 58
      },
      "lineNbr": 119,
      "author": {
        "id": 63
      },
      "writtenOn": "2019-09-30T15:10:47Z",
      "side": 1,
      "message": "all the instances in our testing environment will have ssh enabled, and will be reached via sftp. If we parametrize this correctly, there will be no need for this else branch.",
      "revId": "da4cd5ed2141142f7e2f413825d64839ec537af8",
      "serverId": "270e2033-b340-4cff-9539-693957ebf0e7",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8865221e_a9195724",
        "filename": "ci-scripts/dlrnapi_promoter/tests/staging-setup/promoter_test.py",
        "patchSetId": 58
      },
      "lineNbr": 129,
      "author": {
        "id": 63
      },
      "writtenOn": "2019-09-30T15:10:47Z",
      "side": 1,
      "message": "Same with above on the raise assert message.",
      "revId": "da4cd5ed2141142f7e2f413825d64839ec537af8",
      "serverId": "270e2033-b340-4cff-9539-693957ebf0e7",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c497072c_eeadc413",
        "filename": "ci-scripts/dlrnapi_promoter/tests/staging-setup/promoter_test.py",
        "patchSetId": 58
      },
      "lineNbr": 152,
      "author": {
        "id": 63
      },
      "writtenOn": "2019-09-30T15:10:47Z",
      "side": 1,
      "message": "Same as above with open and close",
      "revId": "da4cd5ed2141142f7e2f413825d64839ec537af8",
      "serverId": "270e2033-b340-4cff-9539-693957ebf0e7",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c1f13962_74147088",
        "filename": "ci-scripts/dlrnapi_promoter/tests/staging-setup/promoter_test.py",
        "patchSetId": 58
      },
      "lineNbr": 157,
      "author": {
        "id": 63
      },
      "writtenOn": "2019-09-30T15:10:47Z",
      "side": 1,
      "message": "Samve as above with assert and raise",
      "revId": "da4cd5ed2141142f7e2f413825d64839ec537af8",
      "serverId": "270e2033-b340-4cff-9539-693957ebf0e7",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee2c13db_8e3b70ef",
        "filename": "ci-scripts/dlrnapi_promoter/tests/staging-setup/promoter_test.py",
        "patchSetId": 58
      },
      "lineNbr": 174,
      "author": {
        "id": 63
      },
      "writtenOn": "2019-09-30T15:10:47Z",
      "side": 1,
      "message": "This string is quite difficult to read. There should be no need here to use raw strings and escape quotes, I\u0027ll chck if we can use double quotes instead.",
      "revId": "da4cd5ed2141142f7e2f413825d64839ec537af8",
      "serverId": "270e2033-b340-4cff-9539-693957ebf0e7",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dc0e021a_9bd1e90f",
        "filename": "ci-scripts/dlrnapi_promoter/tests/staging-setup/promoter_test.py",
        "patchSetId": 58
      },
      "lineNbr": 184,
      "author": {
        "id": 63
      },
      "writtenOn": "2019-09-30T15:10:47Z",
      "side": 1,
      "message": "using intermediate variables may help you with linters compliance. in this case creating \na success_patterns variable with all the three patters and using \"for\" with it satisfies PEP8 and improves readability",
      "revId": "da4cd5ed2141142f7e2f413825d64839ec537af8",
      "serverId": "270e2033-b340-4cff-9539-693957ebf0e7",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "075d31cc_f8055f45",
        "filename": "ci-scripts/dlrnapi_promoter/tests/staging-setup/promoter_test.py",
        "patchSetId": 58
      },
      "lineNbr": 189,
      "author": {
        "id": 63
      },
      "writtenOn": "2019-09-30T15:10:47Z",
      "side": 1,
      "message": "Assert, raise",
      "revId": "da4cd5ed2141142f7e2f413825d64839ec537af8",
      "serverId": "270e2033-b340-4cff-9539-693957ebf0e7",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ab3eae7_31ebcbcc",
        "filename": "ci-scripts/dlrnapi_promoter/tests/staging-setup/promoter_test.py",
        "patchSetId": 58
      },
      "lineNbr": 199,
      "author": {
        "id": 63
      },
      "writtenOn": "2019-09-30T15:10:47Z",
      "side": 1,
      "message": "Here also, raw a escaped quotes",
      "revId": "da4cd5ed2141142f7e2f413825d64839ec537af8",
      "serverId": "270e2033-b340-4cff-9539-693957ebf0e7",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b8adbba0_11466234",
        "filename": "ci-scripts/dlrnapi_promoter/tests/staging-setup/promoter_test.py",
        "patchSetId": 58
      },
      "lineNbr": 208,
      "author": {
        "id": 63
      },
      "writtenOn": "2019-09-30T15:10:47Z",
      "side": 1,
      "message": "assert, raise",
      "revId": "da4cd5ed2141142f7e2f413825d64839ec537af8",
      "serverId": "270e2033-b340-4cff-9539-693957ebf0e7",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4fe7f2a7_86cb4c99",
        "filename": "ci-scripts/dlrnapi_promoter/tests/staging-setup/promoter_test.py",
        "patchSetId": 58
      },
      "lineNbr": 225,
      "author": {
        "id": 63
      },
      "writtenOn": "2019-09-30T15:10:47Z",
      "side": 1,
      "message": "open and close",
      "revId": "da4cd5ed2141142f7e2f413825d64839ec537af8",
      "serverId": "270e2033-b340-4cff-9539-693957ebf0e7",
      "unresolved": false
    }
  ]
}