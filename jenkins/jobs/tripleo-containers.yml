- builder:
    name: 'rdo-tripleo-containers-generic-builder'
    builders:
        - shell: |
            # Set up ansible-playbook extra vars because we don't want to override
            # the defaults if they're not set
            extra_vars=""

            # Variable that might be set up through environment variable (promote pipeline)
            if [ -n "$delorean_current_hash" ]; then
              trunk_repository="https://trunk.rdoproject.org/centos7-$openstack_release/$delorean_current_hash/delorean.repo"
            fi

            [[ -n "$kolla_registry" ]] && extra_vars="$extra_vars -e kolla_registry=$kolla_registry"
            [[ -n "$kolla_registry_username" ]] && extra_vars="$extra_vars -e kolla_registry_username=$kolla_registry_username"
            [[ -n "$kolla_registry_password" ]] && extra_vars="$extra_vars -e kolla_registry_password=$kolla_registry_password"
            [[ -n "$kolla_registry_email" ]] && extra_vars="$extra_vars -e kolla_registry_email=$kolla_registry_email"
            [[ -n "$kolla_insecure_registry" ]] && extra_vars="$extra_vars -e kolla_insecure_registry=$kolla_insecure_registry"

            [[ -n "$trunk_repository" ]] && extra_vars="$extra_vars -e trunk_repository=$trunk_repository"
            [[ -n "$trunk_deps_repository" ]] && extra_vars="$extra_vars -e trunk_deps_repository=$trunk_deps_repository"
            [[ -n "$kolla_push" ]] && extra_vars="$extra_vars -e kolla_push=$kolla_push"
            [[ -n "$kolla_rdo_images" ]] && extra_vars="$extra_vars -e kolla_rdo_images=$kolla_rdo_images"
            [[ -n "$kolla_base" ]] && extra_vars="$extra_vars -e kolla_base=$kolla_base"
            [[ -n "$kolla_base_image" ]] && extra_vars="$extra_vars -e kolla_base_image=$kolla_base_image"
            [[ -n "$kolla_base_tag" ]] && extra_vars="$extra_vars -e kolla_base_tag=$kolla_base_tag"
            [[ -n "$kolla_debug" ]] && extra_vars="$extra_vars -e kolla_debug=$kolla_debug"
            [[ -n "$kolla_tag" ]] && extra_vars="$extra_vars -e kolla_tag=$kolla_tag"
            [[ -n "$kolla_template_only" ]] && extra_vars="$extra_vars -e kolla_template_only=$kolla_template_only"
            [[ -n "$kolla_template_override" ]] && extra_vars="$extra_vars -e kolla_template_override=$kolla_template_override"

            ANSIBLE_HOSTS="$WORKSPACE/hosts"

            pushd $WORKSPACE
            # Retrieve role
            mkdir -p $WORKSPACE/roles
            pushd $WORKSPACE/roles
                git clone https://github.com/rdo-infra/ansible-role-rdo-kolla-build kolla-build
            popd

            # Install dependencies
            [[ ! -d provision_venv ]] && virtualenv provision_venv
            source provision_venv/bin/activate
            pip install ansible==2.3.1.0 ara

            ara_location=$(python -c "import os,ara; print(os.path.dirname(ara.__file__))")
            export ANSIBLE_HOST_KEY_CHECKING=False
            export ANSIBLE_CALLBACK_PLUGINS="$ara_location/plugins/callbacks"
            export ANSIBLE_ACTION_PLUGINS="$ara_location/plugins/actions"
            export ANSIBLE_LIBRARY="$ara_location/plugins/modules"
            export ANSIBLE_ROLES_PATH="$WORKSPACE/roles"
            export ARA_DATABASE="sqlite:///$WORKSPACE/$JOB_NAME.sqlite"

            cat << EOF > $WORKSPACE/playbook.yml
            ---
            - name: Build Kolla images
              hosts: openstack_nodes
              become: yes
              become_user: root
              tasks:
                - include_role:
                    name: "kolla-build"
                    static: "no"
            EOF

            ansible-playbook -i $WORKSPACE/hosts $WORKSPACE/playbook.yml -e kolla_threads=16 $extra_vars
            deactivate
            popd

- builder:
    name: 'rdo-tripleo-containers-promotion-builder'
    builders:
        - shell: |
            # Set up ansible-playbook extra vars because we don't want to override
            # the defaults if they're not set
            extra_vars=""

            # Variable configuration and validation
            if [ -n "$delorean_current_hash" ]; then
              source_tag=$(echo "${delorean_current_hash}" |awk -F/ '{print $3}')
            fi
            if [ -z "$source_tag" ]; then
              echo "The source_tag parameter must be set"
              exit 1
            fi
            if [ -z "$destination_tag" ]; then
              echo "The destination tag must be set"
              exit 1
            fi

            extra_vars="$extra_vars -e source_tag=$source_tag"
            extra_vars="$extra_vars -e destination_tag=$destination_tag"

            ANSIBLE_HOSTS="$WORKSPACE/hosts"

            pushd $WORKSPACE
            # Retrieve the ansible-role-rdo-kolla-build role for the promotion playbook
            git clone https://github.com/rdo-infra/ansible-role-rdo-kolla-build rdo-kolla-build

            # Install dependencies
            [[ ! -d provision_venv ]] && virtualenv provision_venv
            source provision_venv/bin/activate
            pip install ansible==2.3.1.0 ara

            ara_location=$(python -c "import os,ara; print(os.path.dirname(ara.__file__))")
            export ANSIBLE_HOST_KEY_CHECKING=False
            export ANSIBLE_CALLBACK_PLUGINS="$ara_location/plugins/callbacks"
            export ANSIBLE_ACTION_PLUGINS="$ara_location/plugins/actions"
            export ANSIBLE_LIBRARY="$ara_location/plugins/modules"
            export ANSIBLE_ROLES_PATH="$WORKSPACE/roles"
            export ARA_DATABASE="sqlite:///$WORKSPACE/$JOB_NAME.sqlite"

            ansible-playbook -i $WORKSPACE/hosts $WORKSPACE/rdo-kolla-build/tag-promotion.yml $extra_vars
            deactivate
            popd

# "Building remotely" should always be in the build console output
- publisher:
    name: 'rdo-tripleo-containers-destroy-vm'
    publishers:
        - post-tasks:
            - matches:
                - log-text: Building remotely
              script:
                !include-raw:
                    - scripts/destroy-vm.sh

- job:
    name: 'rdo-tripleo-containers-build'
    description: |
        <p>Managed by Jenkins Job Builder. Do not edit via web.</p>
        <br>
        <p>
          This job leverages the <a href="https://github.com/rdo-infra/ansible-role-rdo-kolla-build" target="_blank">ansible-role-rdo-kolla-build</a>
          Ansible role to setup dependencies, build, tag and publish containers.
        </p>
        <p>
          This job is parameterized but priorizes environment variables if they are available.
          Only specify parameters if you wish to override the default parameters provided by the role.
        </p>
        <p>
          For more information about the parameters of this job,
          refer to the <a href="https://github.com/rdo-infra/ansible-role-rdo-kolla-build" target="_blank">GitHub Repository</a>.
        </p>
    concurrent: true
    node: 'rdo-virtualized'
    parameters:
        - string:
            name: kolla_setup_method
            description: How to set up Kolla, can be binary (RDO package) or source (from git)
        - string:
            name: openstack_release
            default: master
            description: "The version of OpenStack (ex: master, ocata, newton, etc.)"
        - string:
            name: trunk_repository
            description: The URL of the trunk repository to use
        - string:
            name: trunk_deps_repository
            description: The URL of the trunk repository dependencies to use
        - string:
            name: kolla_registry
            description: The URL of the registry to push to
        - string:
            name: kolla_push
            description: Whether or not to push the containers (requires valid registry parameters)
        - string:
            name: kolla_rdo_images
            description: The image tags to build (comma separated)
        - string:
            name: kolla_base
        - string:
            name: kolla_base_image
        - string:
            name: kolla_base_tag
        - string:
            name: kolla_debug
        - string:
            name: kolla_tag
        - string:
            name: kolla_template_only
        - string:
            name: kolla_template_override
        - string:
            name: kolla_insecure_registry
            description: Set to 'true' if the registry is insecure
        - string:
            name: kolla_registry_username
            description: Override to set a custom registry username
        - string:
            name: kolla_registry_password
            dsecription: Override to set a custom registry password
        - string:
            name: kolla_registry_email
            description: Override to set a custom registry email
    builders:
        - rdo-generate-log-rdoproject-org-redirection
        - rdo-create-vm
        - rdo-tripleo-containers-generic-builder
    properties:
        - ownership:
            owner: dms@redhat.com
    logrotate:
        daysToKeep: 31
        artifactDaysToKeep: 31
    wrappers:
        - ansicolor
        - timestamps
        - workspace-cleanup
        - timeout:
            type: absolute
            timeout: 150
            fail: true
        - credentials-binding:
          - text:
             credential-id: bd06088f-7ceb-4187-a8f9-62b8819c6e19
             variable: REGISTRY_PASSWORD
    publishers:
        - archive:
            artifacts: 'logs.html'
            allow-empty: true
        - rdo-tripleo-containers-destroy-vm

- job:
    name: 'rdo-tripleo-containers-promote'
    description: |
        <p>Managed by Jenkins Job Builder. Do not edit via web.</p>
        <br>
        <p>
          This job promotes a given tag for a set of container images.
        </p>
        It takes two parameters:<br>
        <ul>
          <li>source_tag (<i>defaults to 'delorean_current_hash' if provided by the environment</i>)</li>
          <li>destination_tag (<i>defaults to 'current-tripleo'</i>)</li>
        </ul>
        <br>
        So, for example, pretend you want to tag all the images which are tagged after the delorean hash '<pre>38471d4ccf3914805fafaa56b21db2cc83755e95_5d6d179f</pre>' to '<pre>current-tripleo</pre>', you'd set:
        <br>
        <ul>
          <li>source_tag: <b>38471d4ccf3914805fafaa56b21db2cc83755e95_5d6d179f</b></li>
          <li>destination_tag: <b>current-tripleo</b></li>
        </ul>
        <br>
        This would retrieve all images which are tagged <pre>38471d4ccf3914805fafaa56b21db2cc83755e95_5d6d179f</pre> and tag them <pre>current-tripleo</pre>.
    concurrent: true
    node: 'rdo-virtualized'
    parameters:
        - string:
            name: source_tag
            description: The source image tag you want to use to create or update a tag
        - string:
            name: destination_tag
            default: 'current-tripleo'
            description: The destination image tag you want to create to update
    builders:
        - rdo-generate-log-rdoproject-org-redirection
        - rdo-create-vm
        - rdo-tripleo-containers-promotion-builder
    properties:
        - ownership:
            owner: dms@redhat.com
    logrotate:
        daysToKeep: 31
        artifactDaysToKeep: 31
    wrappers:
        - ansicolor
        - timestamps
        - workspace-cleanup
        - timeout:
            type: absolute
            timeout: 120
            fail: true
        - credentials-binding:
          - text:
             credential-id: bd06088f-7ceb-4187-a8f9-62b8819c6e19
             variable: REGISTRY_PASSWORD
    publishers:
        - archive:
            artifacts: 'logs.html'
            allow-empty: true
        - rdo-tripleo-containers-destroy-vm
