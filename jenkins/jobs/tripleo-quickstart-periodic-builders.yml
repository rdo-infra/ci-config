- builder:
    name: 'tripleo-quickstart-quick-periodic-builder'
    builders:
        - shining-panda:
            build-environment: 'virtualenv'
            python-version: 'system-CPython-2.7'
            nature: 'shell'
            clear: true
            use-distribute: false
            system-site-packages: false
            ignore-exit-code: false
            command: |
              bash $WORKSPACE/tripleo-quickstart/ci-scripts/get-node.sh
              export VIRTHOST=$(head -n1 $WORKSPACE/virthost)
              echo $VIRTHOST

              pushd $WORKSPACE/tripleo-quickstart

              result=0
              # (trown) This is so that we ensure seperate ssh sockets for
              # concurrent jobs. Without this, two jobs running in parallel
              # would try to use the same undercloud-stack socket.
              socketdir=$(mktemp -d /tmp/sockXXXXXX)
              export ANSIBLE_SSH_CONTROL_PATH=$socketdir/%%h-%%r

              export RELEASE={release}
              bash $WORKSPACE/tripleo-quickstart/ci-scripts/{test}.sh  || result=1

              infra_result=0

              bash $WORKSPACE/tripleo-quickstart/ci-scripts/collect-logs.sh &> $WORKSPACE/collect_logs.txt || infra_result=1
              bash $WORKSPACE/tripleo-quickstart/ci-scripts/return-node.sh &> $WORKSPACE/cleanup.txt || infra_result=2

              if [[ "$infra_result" != "0" && "$result" = "0" ]]; then
                # if the job/test was ok, but collect_logs/cleanup failed,
                # print out why the collect_logs/cleanup failed
                cat $WORKSPACE/collect_logs.txt
                cat $WORKSPACE/cleanup.txt
              fi
              exit $result

- builder:
    name: 'tripleo-quickstart-full-periodic-builder'
    builders:
        - shining-panda:
            build-environment: 'virtualenv'
            python-version: 'system-CPython-2.7'
            nature: 'shell'
            clear: true
            use-distribute: false
            system-site-packages: false
            ignore-exit-code: false
            command: |
              bash $WORKSPACE/tripleo-quickstart/ci-scripts/get-node.sh
              export VIRTHOST=$(head -n1 $WORKSPACE/virthost)
              echo $VIRTHOST

              pushd $WORKSPACE/tripleo-quickstart

              result=0
              # (trown) This is so that we ensure seperate ssh sockets for
              # concurrent jobs. Without this, two jobs running in parallel
              # would try to use the same undercloud-stack socket.
              socketdir=$(mktemp -d /tmp/sockXXXXXX)
              export ANSIBLE_SSH_CONTROL_PATH=$socketdir/%%h-%%r

              bash $WORKSPACE/tripleo-quickstart/quickstart.sh \
              --tags all \
              --undercloud-image-url "http://artifacts.ci.centos.org/artifacts/rdo/images/{release}/{build_system}/stable/undercloud.qcow2" \
              --config $WORKSPACE/tripleo-quickstart/playbooks/centosci/{topology}.yml \
              --working-dir $WORKSPACE/ \
              --no-clone \
              $VIRTHOST {release} || result=1

              infra_result=0

              bash $WORKSPACE/tripleo-quickstart/ci-scripts/collect-logs.sh &> $WORKSPACE/collect_logs.txt || infra_result=1
              bash $WORKSPACE/tripleo-quickstart/ci-scripts/return-node.sh &> $WORKSPACE/cleanup.txt || infra_result=2

              if [[ "$infra_result" != "0" && "$result" = "0" ]]; then
                # if the job/test was ok, but collect_logs/cleanup failed,
                # print out why the collect_logs/cleanup failed
                cat $WORKSPACE/collect_logs.txt
                cat $WORKSPACE/cleanup.txt
              fi
              exit $result

- builder:
    name: 'tripleo-quickstart-images-periodic-builder'
    builders:
        - shining-panda:
            build-environment: 'virtualenv'
            python-version: 'system-CPython-2.7'
            nature: 'shell'
            clear: true
            use-distribute: false
            system-site-packages: false
            ignore-exit-code: false
            command: |
              bash $WORKSPACE/tripleo-quickstart/ci-scripts/get-node.sh
              export VIRTHOST=$(head -n1 $WORKSPACE/virthost)
              echo $VIRTHOST

              pushd $WORKSPACE/tripleo-quickstart
              pip install -r requirements.txt
              # (trown) This is so that we ensure seperate ssh sockets for
              # concurrent jobs. Without this, two jobs running in parallel
              # would try to use the same undercloud-stack socket.
              socketdir=$(mktemp -d /tmp/sockXXXXXX)
              export ANSIBLE_SSH_CONTROL_PATH=$socketdir/%%h-%%r

              result=0

              ansible --version
              anscmd="stdbuf -oL -eL ansible-playbook -vv"
              $anscmd -i local_hosts $WORKSPACE/tripleo-quickstart/playbooks/build-images-and-quickstart.yml \
              --extra-vars ansible_python_interpreter=/usr/bin/python \
              --extra-vars virthost=$VIRTHOST \
              --extra-vars local_working_dir=$WORKSPACE/ \
              --extra-vars image_url="file:///var/lib/oooq-images/undercloud.qcow2" \
              --extra-vars artib_release={release} \
              --extra-vars artib_build_system={build_system} \
              --extra-vars @$WORKSPACE/tripleo-quickstart/playbooks/centosci/{topology}.yml || result=1

              infra_result=0

              bash $WORKSPACE/tripleo-quickstart/ci-scripts/collect-logs.sh &> $WORKSPACE/collect_logs.txt || infra_result=1
              bash $WORKSPACE/tripleo-quickstart/ci-scripts/return-node.sh &> $WORKSPACE/cleanup.txt || infra_result=2

              if [[ "$infra_result" != "0" && "$result" = "0" ]]; then
                # if the job/test was ok, but collect_logs/cleanup failed,
                # print out why the collect_logs/cleanup failed
                cat $WORKSPACE/collect_logs.txt
                cat $WORKSPACE/cleanup.txt
              fi
              exit $result
