- builder:
    name: 'tripleo-upstream-setup-roles'
    builders:
        - shell: |
            WORKSPACE="${WORKSPACE:-/tmp}"

            # Place roles for the tripleo-ci container build playbooks in the proper directory
            mkdir ${WORKSPACE}/roles
            cp -r ${WORKSPACE}/tripleo-ci/roles/* ${WORKSPACE}/roles
            git clone https://github.com/openstack/ansible-role-bindep \
                ${WORKSPACE}/roles/bindep

            # Mock prerequisite zuul vars so the playbooks can run on jenkins
            cat <<EOF >> ${WORKSPACE}/roles/build-containers/vars/common.yaml

            zuul:
              projects:
                opendev.org/openstack/tripleo-repos:
                  src_dir: "src/opendev.org/openstack/tripleo-repos"
                opendev.org/openstack/python-tripleoclient:
                  src_dir: "src/opendev.org/openstack/python-tripleoclient"
              branch: "master"
              pipeline: "periodic"

            use_buildah: "true"
            EOF

            cat <<EOF >> ${WORKSPACE}/roles/tripleo-repos/vars/main.yml

            zuul:
              branch: master
              projects:
                opendev.org/openstack/tripleo-repos:
                  src_dir: "src/opendev.org/openstack/tripleo-repos"
                opendev.org/openstack/python-tripleoclient:
                  src_dir: "src/opendev.org/openstack/python-tripleoclient"
            EOF

- builder:
    name: 'tripleo-upstream-build-containers'
    builders:
         - shell: |
            WORKSPACE="${WORKSPACE:-/tmp}"
            CICO_USER_DIR="${CICO_USER_DIR:-/root}"
            VENV="${WORKSPACE}/venv"
            OPENSTACK_GIT_URL="https://opendev.org/openstack"

            [[ ! -d "${VENV}" ]] && virtualenv "${VENV}"
            source "${VENV}/bin/activate"

            # Install requirements.
            # Pin to version used by tripleo-quickstart as of this commit.
            pip install ansible==2.5.8

            # We keep connecting onto the same hosts that are continuously reinstalled
            export ANSIBLE_HOST_KEY_CHECKING=False

            # cat the playbook for building containers to the workspace
            cat << EOF > ${WORKSPACE}/containers-build.yml
            ---
            - name: 'Setup CICO node for container builds'
              hosts: openstack_nodes
              become: yes
              become_user: root
              tasks:
                - shell: |
                    iptables -N openstack-INPUT
                    yum install -y gcc git python-devel python-setuptools libffi libffi-devel openssl openssl-devel
                    easy_install pip
                    pip install ansible==2.5.8

                    # Deliberately clobber decorator system site package with working version
                    pip install -I decorator

            - name: 'Clone git dependencies'
              hosts: openstack_nodes
              tasks:
                - name: 'Clone git dependency'
                  git:
                    repo: '${OPENSTACK_GIT_URL}/{{ item }}.git'
                    dest: '${CICO_USER_DIR}/src/opendev.org/openstack/{{ item }}'
                  with_items:
                    - 'ansible-role-container-registry'
                    - 'tripleo-repos'
                    - 'kolla'
                    - 'python-tripleoclient'
                    - 'tripleo-common'

            - name: 'Setup TripleO Container Registry and repos mirror'
              hosts: openstack_nodes
              roles:
                - role: tripleo-repos
                  override_repos: "{{ buildcontainers_override_repos | default('') }}"
                  tripleo_repos_repository: "${CICO_USER_DIR}/{{ zuul.projects['opendev.org/openstack/tripleo-repos'].src_dir }}"
                - role: bindep
                  bindep_dir: "${CICO_USER_DIR}/{{ zuul.projects['opendev.org/openstack/python-tripleoclient'].src_dir }}"
              tasks:
                - name: Run build containers pre tasks
                  include_role:
                    name: build-containers
                    tasks_from: pre

            - name: 'Build TripleO Containers'
              hosts: openstack_nodes
              tasks:
                - name: Run build containers tasks
                  include_role:
                    name: build-containers
            EOF

            # cico-get-node requests a duffy node and generates an ansible-compatible
            # inventory at $WORKSPACE/hosts
            ansible-playbook -vvv -i "${WORKSPACE}/hosts" "${WORKSPACE}/containers-build.yml"
