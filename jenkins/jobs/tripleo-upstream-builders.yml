- builder:
    name: 'tripleo-upstream-setup-roles'
    builders:
        - shell: |
            WORKSPACE="${WORKSPACE:-/tmp}"
            CICO_USER_DIR="${CICO_USER_DIR:-/root}"

            # Workaround to ensure skydive container, which isn't supported on ppc64le, doesn't build
            cat <<EOF >> ${WORKSPACE}/tripleo-ci/roles/build-containers/tasks/venv_setup.yml

            - name: Remove skydive from kolla
              file:
                path: "${CICO_USER_DIR}/workspace/venv_build/share/kolla/docker/skydive"
                state: absent
            EOF

            # Place roles for the tripleo-ci container build playbooks in the proper directory
            mkdir ${WORKSPACE}/roles
            cp -r ${WORKSPACE}/tripleo-ci/roles/* ${WORKSPACE}/roles
            git clone https://github.com/openstack/ansible-role-bindep \
                ${WORKSPACE}/roles/bindep

            # Mock prerequisite zuul vars so the playbooks can run on jenkins
            cat <<EOF >> ${WORKSPACE}/roles/build-containers/vars/main.yaml

            zuul:
              projects:
                opendev.org/openstack/tripleo-repos:
                  src_dir: "src/opendev.org/openstack/tripleo-repos"
                opendev.org/openstack/python-tripleoclient:
                  src_dir: "src/opendev.org/openstack/python-tripleoclient"
              branch: "master"
              pipeline: "periodic"

            push_containers: true
            push_registry: trunk.registry.rdoproject.org
            EOF

            cat <<EOF >> ${WORKSPACE}/roles/tripleo-repos/vars/main.yml

            zuul:
              branch: master
              projects:
                opendev.org/openstack/tripleo-repos:
                  src_dir: "src/opendev.org/openstack/tripleo-repos"
                opendev.org/openstack/python-tripleoclient:
                  src_dir: "src/opendev.org/openstack/python-tripleoclient"
            EOF

- builder:
    name: 'tripleo-upstream-build-containers'
    builders:
         - shell: |
            WORKSPACE="${WORKSPACE:-/tmp}"
            CICO_USER_DIR="${CICO_USER_DIR:-/root}"
            VENV="${WORKSPACE}/venv"
            OPENSTACK_GIT_URL="https://opendev.org/openstack"
            RELEASE="${RELEASE:-master}"
            RDO_CONFIG_DIR="${RDO_CONFIG_DIR:-src/rdo-infra/ci-config}"
            RDO_CONFIG_DIR_PROTECTED="${RDO_CONFIG_DIR_PROTECTED:-src/rdo-infra/review.rdoproject.org-config}"

            [[ ! -d "${VENV}" ]] && virtualenv "${VENV}"
            source "${VENV}/bin/activate"

            # Install requirements.
            # Pin to version used by tripleo-quickstart as of this commit.
            pip install ansible==2.8.0

            # We keep connecting onto the same hosts that are continuously reinstalled
            export ANSIBLE_HOST_KEY_CHECKING=False

            # cat the playbook for building containers to the workspace
            cat << EOF > ${WORKSPACE}/containers-build.yml
            ---
            - name: 'Setup CICO node for container builds'
              hosts: openstack_nodes
              become: yes
              become_user: root
              tasks:
                - shell: |
                    iptables -N openstack-INPUT
                    iptables -I INPUT 1 -j openstack-INPUT

                    yum install -y docker gcc git python-devel python-virtualenv python-setuptools python-docker libffi libffi-devel openssl openssl-devel
                    easy_install pip
                    pip install ansible==2.8.0

                    # Deliberately clobber decorator system site package with working version
                    pip install -I decorator

                - service:
                    name: docker
                    state: started

            - name: 'Clone OpenStack git dependencies'
              hosts: openstack_nodes
              tasks:
                - name: 'Clone git dependency'
                  git:
                    repo: '${OPENSTACK_GIT_URL}/{{ item }}.git'
                    dest: '${CICO_USER_DIR}/src/opendev.org/openstack/{{ item }}'
                  with_items:
                    - 'ansible-role-container-registry'
                    - 'tripleo-repos'
                    - 'kolla'
                    - 'python-tripleoclient'
                    - 'tripleo-common'

            - name: 'Clone RDO git dependencies, protected repo'
              hosts: openstack_nodes
              tasks:
                - name: 'Clone rdo-infra/review.rdoproject.org-config'
                  git:
                     repo: 'https://github.com/rdo-infra/review.rdoproject.org-config.git'
                     dest: '${CICO_USER_DIR}/${RDO_CONFIG_DIR_PROTECTED}'

            - name: 'Clone RDO git dependencies'
              hosts: openstack_nodes
              tasks:
                - name: 'Clone rdo-infra/review.rdoproject.org-config'
                  git:
                     repo: 'https://github.com/rdo-infra/ci-config.git'
                     dest: '${CICO_USER_DIR}/${RDO_CONFIG_DIR}'

            - name: 'Login to RDO registry'
              hosts: openstack_nodes
              tasks:
                - when: push_containers|default(true)|bool
                  block:
                    - become: "{{ item }}"
                      docker_login:
                          registry_url: "https://trunk.registry.rdoproject.org"
                          username: "tripleo.service"
                          password: "${RDO_REGISTRY_TOKEN}"
                          reauthorize: true
                      with_items:
                       - true
                       - false

            - name: Populate hash.info required for dlrn reporting
              hosts: openstack_nodes
              tasks:
                - shell: |
                      pushd "${CICO_USER_DIR}"
                        export WORKSPACE="${CICO_USER_DIR}/workspace"
                        export RELEASE="${RELEASE}"
                        export PROMOTE_NAME="tripleo-ci-testing"
                        export DLRNAPI_DISTRO={{ ansible_distribution }}
                        export DLRNAPI_DISTRO_VERSION={{ ansible_distribution_major_version }}
                        bash -xe "${CICO_USER_DIR}/${RDO_CONFIG_DIR}/ci-scripts/tripleo-upstream/get-hash.sh"
                      popd

            - name: 'Setup TripleO Container Registry and repos mirror'
              hosts: openstack_nodes
              roles:
                - role: tripleo-repos
                  override_repos: "tripleo-ci-testing"
                  tripleo_repos_repository: "${CICO_USER_DIR}/{{ zuul.projects['opendev.org/openstack/tripleo-repos'].src_dir }}"
                - role: bindep
                  bindep_dir: "${CICO_USER_DIR}/{{ zuul.projects['opendev.org/openstack/python-tripleoclient'].src_dir }}"
              tasks:
                - name: Run build containers pre tasks
                  include_role:
                    name: build-containers
                    tasks_from: pre

            - name: 'Build TripleO Containers'
              hosts: openstack_nodes
              tasks:
                - block:
                    - name: Run build containers tasks
                      include_role:
                        name: build-containers
                    - name: Report success
                      debug:
                        msg: Container build and upload succeeded
                  rescue:
                    - name: Report failure
                      fail:
                        msg: Container build and upload failed
            EOF

            # cico-get-node requests a duffy node and generates an ansible-compatible
            # inventory at $WORKSPACE/hosts
            ansible-playbook --ssh-extra-args="-o UserKnownHostsFile=/dev/null" -vvv -i "${WORKSPACE}/hosts" "${WORKSPACE}/containers-build.yml"
