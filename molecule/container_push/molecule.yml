---
# container_push scenario
# This test includes containers-promote role with the following:
# - Insecure registry setup
# - Promote to source registry only (disable target registries)
# - Ensure no containers were pushed to target registries

driver:
  name: delegated

platforms:
  - name: instance  # must be able to `ssh host`, edit your ~/.ssh/config
    options:
      managed: False

provisioner:
  name: ansible
  config_options:
    defaults:
      fact_caching: jsonfile
      fact_caching_connection: /tmp/molecule/facts
  inventory:
    host_vars:
      instance:
        # constants and default vars used across scenarios
        # avoids including vars from defaults/main.yml everywhere
        promoter_user: promoter
        remote_path_dlrnapi_secret: "~/dlrnapi_secret"
        remote_path_registry_secret: "~/registry_secret"
        remote_path_uploader_key: "~/.ssh/id_rsa"
        setup_staging: true
        promoter_virtualenv: promoter_venv
        ci_config_local_src_dir: "{{ playbook_dir }}/../.."
        ci_config_remote_src_dir: "/home/{{ promoter_user }}/ci-config"

        # container_push vars
        release: master
        named_label: triple-ci-staging-promoted
        # full_hash is provided by the staging environment
        script_root: UNUSED
        distro_name: centos
        distro_version: 7
        containers_file: "parsed_containers-{{ distro_name }}-{{ distro_version }}-{{ release }}.txt"
        target_registries_push: false
        containers_list:
          - nova-compute
          - neutron-server

scenario:
  test_sequence:
    - prepare
    - converge
    - verify
    - cleanup
