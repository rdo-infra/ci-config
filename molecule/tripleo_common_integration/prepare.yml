---
- hosts: instance
  vars:
    staging_action: setup
    staging_args: "--scenes dlrn,registries,containers"
  tasks:

    # Setup the promoter-staging environment
    # (--scenes 'dlrn,registries,containers')
    - name: Setup staging environment
      include_role:
        name: _ensure_staging

    - name: install tripleo-common and python-tripleoclient
      become: true
      become_user: "{{ promoter_user }}"
      vars:
        ansible_python_interpreter: "/usr/bin/python3"
      pip:
        name: ['tripleo-common', 'python-tripleoclient']
        virtualenv: "~/{{ promoter_virtualenv }}"
      when: zuul is not defined

    - name: Install tripleo projects from zuul
      become: true
      become_user: "{{ promoter_user }}"
      vars:
        ansible_python_interpreter: "/usr/bin/python3"
      block:
        - name: use python-tripleoclient from zuul if it's in the correct dir
          pip:
            name: "file://{{ zuul.executor.work_root }}/{{ zuul.projects['opendev.org/openstack/python-tripleoclient'].src_dir  }}"
            virtualenv: "~/{{ promoter_virtualenv }}"
            state: forcereinstall
          when: "'opendev.org/openstack/python-tripleoclient' in zuul.projects"

        - name: use tripleo-common from zuul if it's in the correct dir
          pip:
            name: "file://{{ zuul.executor.work_root }}/{{ zuul.projects['opendev.org/openstack/tripleo-common'].src_dir  }}"
            virtualenv: "~/{{ promoter_virtualenv }}"
            state: forcereinstall
          when: "'opendev.org/openstack/tripleo-common' in zuul.projects"
      when: zuul is defined

   # populate the promote_registry
    - name: Include tasks from promote_containers.yml
      include_tasks: ../container_push/promote_containers.yml
      args:
        apply:
          become: true
          become_user: "{{ promoter_user }}"

    - name: Mock undercloud registry -- pull registry image
      become: true
      become_user: "{{ promoter_user }}"
      docker_image:
        name: registry:2
        source: pull
      vars:
        ansible_python_interpreter: "~/{{ promoter_virtualenv }}/bin/python3"

    - name: Mock undercloud registry -- run registry
      become: true
      become_user: "{{ promoter_user }}"
      docker_container:
        image: registry:2
        name: "{{ undercloud_registry['name'] }}"
        restart: true
        restart_policy: always
        ports:
          - "{{ undercloud_registry['host'] }}:5000"
      vars:
        ansible_python_interpreter: "~/{{ promoter_virtualenv }}/bin/python3"

    - name: include stage setup variables # noqa 505
      become: true
      become_user: "{{ promoter_user }}"
      include_vars:
          file: ~/stage-info.yaml
          name: stage_info

    - name: set full_hash
      set_fact:
        full_hash: "{{ stage_info.dlrn.promotions.promotion_candidate.full_hash }}"
        cacheable: yes

    - debug:
        var: full_hash

    - debug:
        var: stage_info.containers.images

    - name: Generate containers template file
      become: true
      become_user: "{{ promoter_user }}"
      copy:
        content: |
            container_images_template:
        dest: /tmp/staging_overcloud_containers.yaml.j2

    - name: Read containers file
      become: true
      become_user: "{{ promoter_user }}"
      command: "cat {{ containers_file }}"
      register: cfile
      changed_when: false

    - name: save containers list loaded from file
      set_fact:
        staging_containers_list: "{{ cfile.stdout_lines }}"
        cacheable: yes

    - name: Populate template file w/ staging containers
      become: true
      become_user: "{{ promoter_user }}"
      blockinfile:
        path: /tmp/staging_overcloud_containers.yaml.j2
        block: |
            - imagename: {% raw %}{{ namespace }}/{{ name_prefix }}{% endraw %}{{ item }}{% raw %}{{ name_suffix }}:{{ tag }}
              image_source: kolla
              params:
              - ContainerTripleoclientImage
              services:
              - OS::TripleO::Services::TripleoClient
              {%endraw%}
        marker: "# {mark} ANSIBLE MANAGED BLOCK {{ item }}"
      with_items: "{{ staging_containers_list }}"

    - name: generate staging-containers-prepare-parameter.yaml
      become: true
      become_user: "{{ promoter_user }}"
      copy:
        content: |
            parameter_defaults:
              ContainerImagePrepare:
              - push_destination: "{{ undercloud_registry['host'] }}"
                set:
                  ceph_alertmanager_image: alertmanager
                  ceph_alertmanager_namespace: docker.io/prom
                  ceph_alertmanager_tag: latest
                  ceph_grafana_image: grafana
                  ceph_grafana_namespace: docker.io/grafana
                  ceph_grafana_tag: latest
                  ceph_image: daemon
                  ceph_namespace: docker.io/ceph
                  ceph_node_exporter_image: node-exporter
                  ceph_node_exporter_namespace: docker.io/prom
                  ceph_node_exporter_tag: latest
                  ceph_prometheus_image: prometheus
                  ceph_prometheus_namespace: docker.io/prom
                  ceph_prometheus_tag: latest
                  ceph_tag: v4.0.1-stable-4.0-nautilus-centos-7-x86_64
                  name_prefix: "{{ container_name_prefix }}-"
                  name_suffix: ''
                  namespace: "{{ promote_registries[0]['host'] }}/{{ promote_registries[0]['namespace'] }}"
                  neutron_driver: ovn
                  rhel_containers: false
                  tag: "{{ full_hash }}"
                tag_from_label: rdo_version
        dest: "/tmp/staging-containers-prepare-parameter.yaml"

    - name: copy staging_overcloud_containers.yaml.j2
      become: true
      become_user: "{{ promoter_user }}"
      copy:
        src: "/tmp/staging_overcloud_containers.yaml.j2"
        dest: "~/{{ promoter_virtualenv }}/share/tripleo-common/container-images/overcloud_containers.yaml.j2"
        remote_src: yes
