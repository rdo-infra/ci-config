---
- hosts: all
  tasks:
    - name: Ensure tox directory exists
      file:
        path: '{{ zuul.executor.log_root }}/tox'
        state: directory
      delegate_to: localhost

    - name: Check for molecule dir
      stat:
        path: "{{ zuul_work_dir }}/.tox/molecule/log"
      register: molecule_log_result

    - name: Copy files from tox log dir on node
      failed_when: false
      synchronize:
        src: "{{ zuul_work_dir }}/.tox/molecule/log/"
        dest: '{{ zuul.executor.log_root }}/tox'
        mode: pull
        copy_links: true
        verify_host: true
        rsync_opts:
          - --include=reports.html
          - --exclude=*
      when: molecule_log_result.stat.exists

    - name: Check for molecule_unit dir
      stat:
        path: "{{ zuul_work_dir }}/.tox/molecule_unit/log"
      register: molecule_result

    - name: Copy reports.html
      failed_when: false
      synchronize:
        src: "{{ zuul_work_dir }}/.tox/molecule_unit/log/"
        dest: '{{ zuul.executor.log_root }}/tox'
        mode: pull
        copy_links: true
        verify_host: true
        rsync_opts:
          - --include=reports.html
          - --exclude=*
      when: molecule_result.stat.exists

    - name: Verify that successful job produced expected artifacts
      when:
        - zuul_success | bool
        - not skip_report | default(false)
      block:

        - name: Stat reports.html
          delegate_to: localhost
          stat:
            path: "{{ zuul.executor.log_root }}/tox/reports.html"
          register: result

        - name: Fail a success job if it did not produce a reports.html file
          when: not result.stat.exists
          fail:
            msg: Job failed to produce a reports.html which is mandatory for success.

    - name: Return artifact to Zuul
      when:
        - not skip_report | default(false)
      zuul_return:
        data:
          zuul:
            artifacts:
              - name: "Molecule report"
                url: "tox/reports.html"
                metadata:
                  type: html_report
