# This playbook is run in zuul to drive the end to end promoter integration test
#
---
- hosts: all
  tasks:
    - name: Include defaults from the role
      include_vars:
        file: "{{ zuul.executor.work_root }}/{{ zuul.projects['review.rdoproject.org/rdo-infra/ci-config'].src_dir }}/ci-scripts/infra-setup/roles/promoter/defaults/main.yml"  # noqa 204
    - name: override defaults for zuul
      set_fact:
        promoter_user: zuul
        local_path_dlrnapi_secret: "{{ zuul.executor.work_root }}/dlrnapi_secret"
        local_path_registry_secret: "{{ zuul.executor.work_root }}/registry_secret"
        local_path_uploader_key: "{{ zuul.executor.work_root }}/uploader_key"
        ci_config_local_src_dir: "{{ zuul.executor.work_root }}/{{ zuul.projects['review.rdoproject.org/rdo-infra/ci-config'].src_dir }}"
        setup_staging: true

    # Set up credentials
    - name: save DLRNAPI_PASSWORD
      copy:
       content: export DLRNAPI_PASSWORD='bar'
       dest: "{{ local_path_dlrnapi_secret }}"
      delegate_to: localhost

    - name: check for auth token from docker
      stat:
        path: "/home/{{ promoter_user }}/.docker/config.json"
      register: docker_token

    # TODO(gcerami) change this into a fail when we are ready
    - debug:
        msg: registry credentials in zuul enviroment require a token from pre authentication
      when: not docker_token.stat.exists

    - name: save REGISTRY_PASSWORD
      copy:
        content: export REGISTRY_PASSWORD='test'
        dest: "{{ local_path_registry_secret }}"
      delegate_to: localhost

    - name: save fake static uploader key locally
      copy:
        content: |
            -----BEGIN RSA PRIVATE KEY-----
            MIIEowIBAAKCAQEAvJ5+qg0sA9rHFouk+tQeBq+FDDqHwzLTd1oyMFl+47Fp89jg
            6njfyBmJEyIeGA/AA1njMHDfHC1IWTN/9cgnxcN//gwtRVIsnDRMG8ylwqJNuKKa
            av7Xnxcu6N8PEYRjzRP8nMsCXVev+zi6Y8RdNsH9AOl/S4x+ms2aEs7b7ePI9pgK
            jvrxlKqyO0KVNXXk61s4SBMG+bcEjTNnzzCy5PiV9hlMuw5YERuVV5dMB6rskN5N
            o1O4bc102og1YzIwPAsqp0Hul2o9sKWl9CHcjIhLdx0U9hI2xVqF46+jG/hLlAX6
            kZ8rryxA4jSlxeIP9rDGR5lvwk7H9a7C0mdzLQIDAQABAoIBAQC34/YtqEXfRC6R
            ZnfkK2VSs1CNiYrO3gCY/hCsXrR9HHzlxe4R6uKR3YNsafjZEJHtMndyxLhgai18
            +d6pKwjLoDxq3EhOqzze1YXWHIEG7uHDPpQ5+FcTvbB4TPAN7fq29+NyoeGeS11B
            Gh9uIQWX2yzk9MCsUT8lgYnTCGYW2C3DpuUgajDjhq63NMEYpDnDMCu+SZpTzhfg
            gwpapf7Y93q4X5yDtFrxqaOPHB9h0cSTeJos7Vf25rDud5q/wcJW2azI+WgpgVDP
            uTgeEOjOKN1xH0ebBnmHYSVSfj9iQZdanRxsjcjBtiVzwGaE2gkJuWBeaRhradWU
            9gDujipBAoGBAOoREZOhDmWMqVRuz+536D8ewER2qE+zNt4+KLZatkrVOD14D1AW
            FCWg382sFgJyXB1EKdkp/94B++FBmcwY9YpI4zCRzbNxLXQXtJCIguujCGetlLzl
            wJyj1AiQnvuAJWqtWFAWv126eAvje6AS/Et44IrxOTw/RjMIQ/pLAEV5AoGBAM5L
            M/kLLNko/2kCd6qa8ltZq9MbJD6na19cX0cewDIzUioYmQEUGhZV9rNei/2+8LE6
            lxZ20DUlfdap8PqKhn16+RnIHf7k1934lHuh7kLNr9OoFRH2YSVGJK9L83RxIhVQ
            qPlZEsu0x0gt35jZeq26Chx8tqMWLBWmQL8BxPJVAoGAVD+iiPWufeS8ShS8qQPl
            x1plL/9Zo55JAIN1GfXaqWLHpHBjapsX01dtVtU68tSAzVPskCrq2tjx9WksV2cg
            cg68H45LcOwqxR+HMYLBRNlgvBihccBsrLTXK+IKJ1I/pX8RS3p0lOL6NKVDqSFM
            SEoQ4FHlHQdVWCcAeMWoKlkCgYBn3B7PfJvYvTZRxQdAYoAwE6ZZQ2ntDVcWjKf/
            Y3D6FTKBtR6bF2bG5gKtbaVnXBFL+SaGDc1nZHfFcou7Z7CsThRJsaHAabBwtazz
            zaPqCCpEknQBNhzUqkrf4oowjqDNQG3CE+FNo7dNFKNlDeEgw/BBRVyiIRCS2b/x
            Kk/gfQKBgA+GWI6bjA0zGdjBsElaX0tt3vtJN1rZW/fYSA3FZ2KvdPTxmP/N0pzZ
            PXOzGohcXPGPYFALq1XO8NqDnzVD6sokwkD/n1UKiDOmrB+iRuBXzAleECLarIzi
            WAsyy1Jag5MFgLJysZEKUDPtFWvsrs3gdn63GcrqkOH85a2Y/X2U
            -----END RSA PRIVATE KEY-----
        dest: "{{ local_path_uploader_key }}"
      delegate_to: localhost

#
# While testing, we usually not provisioning a second disk for the server
# So we emulate the second disk with a loopback device
#
    - name: Setup local loop device as docker partition
      include_role:
        name: promoter
        tasks_from: setup_loop

    - name: Promotion main block
      become: true
      block:
        - name: Run promotion server provisioning role
          include_role:
            name: promoter

        - name: Run credentials setup
          include_role:
            name: promoter
            tasks_from: update_credentials

        - name: Stage setup
          include_role:
            name: promoter
            tasks_from: setup_staging

    - name: Try promotion_run
      include_role:
        name: promoter
        tasks_from: promotion_run

    - name: gather stage info
      copy:
        src: /tmp/stage-info.yaml
        dest: "/home/{{ promoter_user }}"
        remote_src: yes

    - name: Test stage promotion
      become: true
      become_user: "{{ promoter_user }}"
      shell:
        cmd: |
          export DOCKER_HOST=unix:///tmp/docker.sock
          source /home/{{ promoter_user }}/promoter_venv/bin/activate
          python /home/{{ promoter_user }}/ci-config/ci-scripts/dlrnapi_promoter/tests/staging-setup/promoter_test.py --stage-info-file /tmp/stage-info.yaml
      changed_when: true
