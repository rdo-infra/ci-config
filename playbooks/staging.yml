- hosts: all
  vars:
    manifest_containers: "base" # centos-binary-base only for now memory testing WIP, centos-binary-rabbitmq
    registry_api: "https://trunk.registry.rdoproject.org:8443/oapi/v1/namespaces/tripleomaster/imagestreamtags"
    distro_name: centos
    rdoproject_namespace: tripleomaster
    dockerhub_namespace: tripleomaster
    ppc_tag: ppc64le
    x86_tag: x86_64
    localhost_registry_container: manifest-local-registry
    manifest_registry: localhost:5000
    manifest_tag: "_manifest"
  tasks:
    - name: Include defaults from the role
      include_vars:
        file: "{{ zuul.executor.work_root }}/{{ zuul.projects['review.rdoproject.org/rdo-infra/ci-config'].src_dir }}/ci-scripts/infra-setup/roles/promoter/defaults/main.yml"
    - name: override defaults for zuul
      set_fact:
        promoter_user: zuul
        local_path_dlrnapi_secret: "{{ zuul.executor.work_root }}/dlrnapi_secret"
        local_path_registry_secret: "{{ zuul.executor.work_root }}/dlrnapi_secret"
        local_path_uploader_key: "{{ zuul.executor.work_root }}/uploader_key"
        ci_config_local_src_dir: "{{ zuul.executor.work_root }}/{{ zuul.projects['review.rdoproject.org/rdo-infra/ci-config'].src_dir }}"
        setup_staging: true

    # Set up credentials
    - copy:
       content: export DLRNAPI_PASSWORD='test'
       dest: "{{ local_path_dlrnapi_secret }}"
      delegate_to: localhost

    - name: check for auth token from docker
      stat:
        path: "/home/{{ promoter_user }}/.docker/config.json"
      register: docker_token

    # TODO(gcerami) change this into a fail when we are ready
    - debug:
        msg: registry credentials in zuul enviroment require a token from pre authentication
      when: not docker_token.stat.exists

    - copy:
        content: export REGISTRY_PASSWORD='test'
        dest: "{{ local_path_registry_secret }}"
      delegate_to: localhost

    - name: save fake static uploader key locally
      copy:
        content: |
            -----BEGIN RSA PRIVATE KEY-----
            MIIEowIBAAKCAQEAvJ5+qg0sA9rHFouk+tQeBq+FDDqHwzLTd1oyMFl+47Fp89jg
            6njfyBmJEyIeGA/AA1njMHDfHC1IWTN/9cgnxcN//gwtRVIsnDRMG8ylwqJNuKKa
            av7Xnxcu6N8PEYRjzRP8nMsCXVev+zi6Y8RdNsH9AOl/S4x+ms2aEs7b7ePI9pgK
            jvrxlKqyO0KVNXXk61s4SBMG+bcEjTNnzzCy5PiV9hlMuw5YERuVV5dMB6rskN5N
            o1O4bc102og1YzIwPAsqp0Hul2o9sKWl9CHcjIhLdx0U9hI2xVqF46+jG/hLlAX6
            kZ8rryxA4jSlxeIP9rDGR5lvwk7H9a7C0mdzLQIDAQABAoIBAQC34/YtqEXfRC6R
            ZnfkK2VSs1CNiYrO3gCY/hCsXrR9HHzlxe4R6uKR3YNsafjZEJHtMndyxLhgai18
            +d6pKwjLoDxq3EhOqzze1YXWHIEG7uHDPpQ5+FcTvbB4TPAN7fq29+NyoeGeS11B
            Gh9uIQWX2yzk9MCsUT8lgYnTCGYW2C3DpuUgajDjhq63NMEYpDnDMCu+SZpTzhfg
            gwpapf7Y93q4X5yDtFrxqaOPHB9h0cSTeJos7Vf25rDud5q/wcJW2azI+WgpgVDP
            uTgeEOjOKN1xH0ebBnmHYSVSfj9iQZdanRxsjcjBtiVzwGaE2gkJuWBeaRhradWU
            9gDujipBAoGBAOoREZOhDmWMqVRuz+536D8ewER2qE+zNt4+KLZatkrVOD14D1AW
            FCWg382sFgJyXB1EKdkp/94B++FBmcwY9YpI4zCRzbNxLXQXtJCIguujCGetlLzl
            wJyj1AiQnvuAJWqtWFAWv126eAvje6AS/Et44IrxOTw/RjMIQ/pLAEV5AoGBAM5L
            M/kLLNko/2kCd6qa8ltZq9MbJD6na19cX0cewDIzUioYmQEUGhZV9rNei/2+8LE6
            lxZ20DUlfdap8PqKhn16+RnIHf7k1934lHuh7kLNr9OoFRH2YSVGJK9L83RxIhVQ
            qPlZEsu0x0gt35jZeq26Chx8tqMWLBWmQL8BxPJVAoGAVD+iiPWufeS8ShS8qQPl
            x1plL/9Zo55JAIN1GfXaqWLHpHBjapsX01dtVtU68tSAzVPskCrq2tjx9WksV2cg
            cg68H45LcOwqxR+HMYLBRNlgvBihccBsrLTXK+IKJ1I/pX8RS3p0lOL6NKVDqSFM
            SEoQ4FHlHQdVWCcAeMWoKlkCgYBn3B7PfJvYvTZRxQdAYoAwE6ZZQ2ntDVcWjKf/
            Y3D6FTKBtR6bF2bG5gKtbaVnXBFL+SaGDc1nZHfFcou7Z7CsThRJsaHAabBwtazz
            zaPqCCpEknQBNhzUqkrf4oowjqDNQG3CE+FNo7dNFKNlDeEgw/BBRVyiIRCS2b/x
            Kk/gfQKBgA+GWI6bjA0zGdjBsElaX0tt3vtJN1rZW/fYSA3FZ2KvdPTxmP/N0pzZ
            PXOzGohcXPGPYFALq1XO8NqDnzVD6sokwkD/n1UKiDOmrB+iRuBXzAleECLarIzi
            WAsyy1Jag5MFgLJysZEKUDPtFWvsrs3gdn63GcrqkOH85a2Y/X2U
            -----END RSA PRIVATE KEY-----
        dest: "{{ local_path_uploader_key }}"
      delegate_to: localhost

#
# While testing, we usually not provisioning a second disk for the server
# So we emulate the second disk with a loopback device
#
    - name: Setup local loop device as docker partition
      include_role:
        name: promoter
        tasks_from: setup_loop

    - name: Run promotion server provisioning role
      include_role:
        name: promoter

      #- register built_images result from manifest_containers var
    - name: Register the built_images for manifest-push testing
      shell: |
        echo "{{ manifest_containers }}"
      register: built_images

    - name: Get a current working hash from {{ registry_api }} for centos-binary-base
      shell: |
        base_name="$(curl -k {{ registry_api }} | grep centos-binary-base:.*_x86_64 | head -1 | cut -d ':' -f 3 )"
        echo "${base_name::-9}"
      register: container_hash

    - name: set fact from container_hash
      set_fact:
        cacheable: true
        full_hash: "{{ container_hash.stdout_lines }}"

    - debug:
        msg: "full hash is {{ full_hash }}"

    - name: Find out docker group name
      shell: |
        set -euo pipefail
        grep docker /etc/group | cut -d":" -f1 | head -1
      register: docker_group
      changed_when: false
      failed_when: false
      tags:
        - staging_prepare

    - name: Check if {{ promoter_user }} is in docker group
      command: "groups {{ promoter_user }}"
      register: user_groups
      changed_when: false

    - name: Add user to docker group
      become: true
      user:
        name: '{{ promoter_user }}'
        groups: '{{ docker_group.stdout }}'
        append: true
      register: groupadd
      when: "docker_group.stdout not in user_groups.stdout"

    - name: Run docker registry for {{ manifest_registry }}
      become: true
      become_user: "{{ promoter_user }}"
      shell: |
        pip install docker --user
        docker pull registry
        docker run -d -p 5000:5000 --restart=always --name manifest-local-registry registry
        docker system prune -a -f

    - name: Include the manifest-push tasks for testing
      include_tasks: "{{ zuul.executor.work_root }}/{{ zuul.projects['review.rdoproject.org/rdo-infra/ci-config'].src_dir }}/ci-scripts/container-push/manifest-push.yml"

