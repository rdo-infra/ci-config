- hosts: all
  vars:
    manifest_containers: "base\nrabbitmq" # centos-binary-base, centos-binary-rabbitmq
    registry_api: "https://trunk.registry.rdoproject.org:8443/oapi/v1/namespaces/tripleomaster/imagestreamtags"
    full_hash: b1e8b74033769f79bc7913e5bbd85bf4fd50c9b9_f2e9ca6b
    distro_name: centos
    rdoproject_namespace: tripleomaster
    dockerhub_namespace: tripleomaster
    ppc_tag: ppc64le
    x86_tag: x86_64
    localhost_registry_container: manifest-local-registry
  tasks:
    - name: Include defaults from the role
      include_vars:
        file: "{{ zuul.executor.work_root }}/{{ zuul.projects['review.rdoproject.org/rdo-infra/ci-config'].src_dir }}/ci-scripts/infra-setup/roles/promoter/defaults/main.yml"

    - name: override defaults for zuul
      set_fact:
        promoter_user: zuul
        local_path_dlrnapi_secret: "{{ zuul.executor.work_root }}/dlrnapi_secret"
        local_path_registry_secret: "{{ zuul.executor.work_root }}/dlrnapi_secret"
        local_path_uploader_key: "{{ zuul.executor.work_root }}/uploader_key"
        ci_config_local_src_dir: "{{ zuul.executor.work_root }}/{{ zuul.projects['review.rdoproject.org/rdo-infra/ci-config'].src_dir }}"
        setup_staging: true
    - name: Gather network facts for ansible_default_ipv4 on localhost
      setup:
        gather_subset: network

    - name: Set fact for the manifest_registry
      set_fact:
        manifest_registry: "{{ hostvars['localhost']['ansible_default_ipv4']['address'] }}:443"

    - name: Add the localhost IP into openssl.cnf v3_ca section
      become: true
      ini_file:
        path: /etc/pki/tls/openssl.cnf
        section: v3_ca
        option: subjectAltName
        value: "IP:{{ hostvars['localhost']['ansible_default_ipv4']['address'] }}"
        backup: yes
        owner: root
        group: root
        mode: 0644

    - name: Create /home/{{ promoter_user }}/certs directory
      delegate_to: localhost
      file:
        path: /home/{{ promoter_user }}/certs/
        state: directory

    - name: Create /etc/docker/certs.d/{{ manifest_registry }} directory
      delegate_to: localhost
      become: true
      file:
        path: /etc/docker/certs.d/{{ manifest_registry }}
        state: directory
        owner: root
        group: root
        mode: 0755

    - name: Shell openssl create certs/domain.key and domain.crt
      delegate_to: localhost
      shell: |
        openssl req -newkey rsa:4096 -nodes -sha256 -keyout certs/domain.key   -x509 -days 365 -out certs/domain.crt -subj "/CN={{ hostvars['localhost']['ansible_default_ipv4']['address'] }}"

    - name: Copy certs/domain.crt to /etc/docker/certs.d/{{ manifest_registry }}
      become: true
      copy:
        src: /home/{{ promoter_user }}/certs/domain.crt
        dest: /etc/docker/certs.d/{{ manifest_registry }}/ca.crt
        owner: root
        group: root
        mode: 0644

    - name: Run docker registry for {{ manifest_registry }}
      shell: |
        docker pull registry
        docker run -d -p 443:443 --restart=always --name manifest-local-registry   -v "$(pwd)"/certs:/certs   -e REGISTRY_HTTP_ADDR=0.0.0.0:443   -e REGISTRY_HTTP_TLS_CERTIFICATE=/home/{{ promoter_user }}/certs/domain.crt -e REGISTRY_HTTP_TLS_KEY=/home/{{ promoter_user }}/certs/domain.key registry

    - name: Include the manifest-push tasks for testing
      include_tasks: "{{ zuul.executor.work_root }}/{{ zuul.projects['review.rdoproject.org/rdo-infra/ci-config'].src_dir }}/ci-scripts/container-push/manifest-push.yml"

    - name: Include defaults from the role
      include_vars:
        file: "{{ zuul.executor.work_root }}/{{ zuul.projects['review.rdoproject.org/rdo-infra/ci-config'].src_dir }}/ci-scripts/infra-setup/roles/promoter/defaults/main.yml"
    - name: override defaults for zuul
      set_fact:
        promoter_user: zuul
        local_path_dlrnapi_secret: "{{ zuul.executor.work_root }}/dlrnapi_secret"
        local_path_registry_secret: "{{ zuul.executor.work_root }}/dlrnapi_secret"
        local_path_uploader_key: "{{ zuul.executor.work_root }}/uploader_key"
        ci_config_local_src_dir: "{{ zuul.executor.work_root }}/{{ zuul.projects['review.rdoproject.org/rdo-infra/ci-config'].src_dir }}"
        setup_staging: true

    # Set up credentials
    - copy:
       content: export DLRNAPI_PASSWORD='test'
       dest: "{{ local_path_dlrnapi_secret }}"
      delegate_to: localhost

    - name: check for auth token from docker
      stat:
        path: "/home/{{ promoter_user }}/.docker/config.json"
      register: docker_token

    # TODO(gcerami) change this into a fail when we are ready
    - debug:
        msg: registry credentials in zuul enviroment require a token from pre authentication
      when: not docker_token.stat.exists

    - copy:
        content: export REGISTRY_PASSWORD='test'
        dest: "{{ local_path_registry_secret }}"
      delegate_to: localhost

    - name: save fake static uploader key locally
      copy:
        content: |
            -----BEGIN RSA PRIVATE KEY-----
            MIIEowIBAAKCAQEAvJ5+qg0sA9rHFouk+tQeBq+FDDqHwzLTd1oyMFl+47Fp89jg
            6njfyBmJEyIeGA/AA1njMHDfHC1IWTN/9cgnxcN//gwtRVIsnDRMG8ylwqJNuKKa
            av7Xnxcu6N8PEYRjzRP8nMsCXVev+zi6Y8RdNsH9AOl/S4x+ms2aEs7b7ePI9pgK
            jvrxlKqyO0KVNXXk61s4SBMG+bcEjTNnzzCy5PiV9hlMuw5YERuVV5dMB6rskN5N
            o1O4bc102og1YzIwPAsqp0Hul2o9sKWl9CHcjIhLdx0U9hI2xVqF46+jG/hLlAX6
            kZ8rryxA4jSlxeIP9rDGR5lvwk7H9a7C0mdzLQIDAQABAoIBAQC34/YtqEXfRC6R
            ZnfkK2VSs1CNiYrO3gCY/hCsXrR9HHzlxe4R6uKR3YNsafjZEJHtMndyxLhgai18
            +d6pKwjLoDxq3EhOqzze1YXWHIEG7uHDPpQ5+FcTvbB4TPAN7fq29+NyoeGeS11B
            Gh9uIQWX2yzk9MCsUT8lgYnTCGYW2C3DpuUgajDjhq63NMEYpDnDMCu+SZpTzhfg
            gwpapf7Y93q4X5yDtFrxqaOPHB9h0cSTeJos7Vf25rDud5q/wcJW2azI+WgpgVDP
            uTgeEOjOKN1xH0ebBnmHYSVSfj9iQZdanRxsjcjBtiVzwGaE2gkJuWBeaRhradWU
            9gDujipBAoGBAOoREZOhDmWMqVRuz+536D8ewER2qE+zNt4+KLZatkrVOD14D1AW
            FCWg382sFgJyXB1EKdkp/94B++FBmcwY9YpI4zCRzbNxLXQXtJCIguujCGetlLzl
            wJyj1AiQnvuAJWqtWFAWv126eAvje6AS/Et44IrxOTw/RjMIQ/pLAEV5AoGBAM5L
            M/kLLNko/2kCd6qa8ltZq9MbJD6na19cX0cewDIzUioYmQEUGhZV9rNei/2+8LE6
            lxZ20DUlfdap8PqKhn16+RnIHf7k1934lHuh7kLNr9OoFRH2YSVGJK9L83RxIhVQ
            qPlZEsu0x0gt35jZeq26Chx8tqMWLBWmQL8BxPJVAoGAVD+iiPWufeS8ShS8qQPl
            x1plL/9Zo55JAIN1GfXaqWLHpHBjapsX01dtVtU68tSAzVPskCrq2tjx9WksV2cg
            cg68H45LcOwqxR+HMYLBRNlgvBihccBsrLTXK+IKJ1I/pX8RS3p0lOL6NKVDqSFM
            SEoQ4FHlHQdVWCcAeMWoKlkCgYBn3B7PfJvYvTZRxQdAYoAwE6ZZQ2ntDVcWjKf/
            Y3D6FTKBtR6bF2bG5gKtbaVnXBFL+SaGDc1nZHfFcou7Z7CsThRJsaHAabBwtazz
            zaPqCCpEknQBNhzUqkrf4oowjqDNQG3CE+FNo7dNFKNlDeEgw/BBRVyiIRCS2b/x
            Kk/gfQKBgA+GWI6bjA0zGdjBsElaX0tt3vtJN1rZW/fYSA3FZ2KvdPTxmP/N0pzZ
            PXOzGohcXPGPYFALq1XO8NqDnzVD6sokwkD/n1UKiDOmrB+iRuBXzAleECLarIzi
            WAsyy1Jag5MFgLJysZEKUDPtFWvsrs3gdn63GcrqkOH85a2Y/X2U
            -----END RSA PRIVATE KEY-----
        dest: "{{ local_path_uploader_key }}"
      delegate_to: localhost

#
# While testing, we usually not provisioning a second disk for the server
# So we emulate the second disk with a loopback device
#
    - name: Setup local loop device as docker partition
      include_role:
        name: promoter
        tasks_from: setup_loop

    - name: Run promotion server provisioning role
      include_role:
        name: promoter
