# This playbook is run in zuul to drive the end to end promoter integration test
#
---
- hosts: all
  tasks:
    - name: Include defaults from the role
      include_vars:
        file: "{{ zuul.executor.work_root }}/{{ zuul.projects['review.rdoproject.org/rdo-infra/ci-config'].src_dir }}/ci-scripts/infra-setup/roles/promoter/defaults/main.yml"  # noqa 204
    - name: override defaults for zuul
      set_fact:
        promoter_user: promoter
        remote_path_dlrnapi_secret: "~/dlrnapi_secret"
        remote_path_registry_secret: "~/registry_secret"
        remote_path_uploader_key: "~/.ssh/id_rsa"
        ci_config_local_src_dir: "{{ zuul.executor.work_root }}/{{ zuul.projects['review.rdoproject.org/rdo-infra/ci-config'].src_dir }}"
        setup_staging: true

    - name: check for auth token from docker
      stat:
        path: "/home/{{ promoter_user }}/.docker/config.json"
      register: docker_token

    # TODO(gcerami) change this into a fail when we are ready
    - debug:
        msg: registry credentials in zuul enviroment require a token from pre authentication
      when: not docker_token.stat.exists

# While testing, we usually not provisioning a second disk for the server
# So we emulate the second disk with a loopback device
#
    - name: Setup local loop device as docker partition
      include_role:
        name: promoter
        tasks_from: setup_loop

    - name: Ensure promoter user exists
      become: true
      user:
        name: "{{ promoter_user }}"
        system: true
        create_home: true

    - name: Ensure credentials are created
      include_role:
        name: _ensure_credentials

    - name: Promotion main block
      become: true
      block:
        - name: Run promotion server provisioning role
          include_role:
            name: promoter

        - name: Stage setup
          include_role:
            name: promoter
            tasks_from: setup_staging

    - name: Try promotion_run
      include_role:
        name: promoter
        tasks_from: promotion_run

    - name: gather stage info
      become: true
      become_user: "{{ promoter_user }}"
      copy:
        src: /tmp/stage-info.yaml
        dest: "~/"
        remote_src: yes

    - name: fetch stage info into zuul executor
      fetch:
        src: /tmp/stage-info.yaml
        dest: "{{ zuul.executor.work_root }}/"
        flat: yes

    - name: Test stage promotion
      become: true
      become_user: "{{ promoter_user }}"
      shell:
        cmd: |
          export DOCKER_HOST=unix:///var/docker.sock
          source ~/{{ promoter_virtualenv }}/bin/activate
          python3 ~/ci-config/ci-scripts/dlrnapi_promoter/promoter_integration_checks.py \
                  --stage-info-file /tmp/stage-info.yaml
      changed_when: true

    - name: include vars from stage info
      include_vars:
        file: "{{ zuul.executor.work_root }}/stage-info.yaml"
        name: stage_info

    - name: Check that no passwords are leaked in the logs
      become: true
      become_user: "{{ promoter_user }}"
      shell: |
        cd ~/web/promoter_logs
        grep -r -f {{ remote_path_dlrnapi_secret }} .
        grep -r -f {{ remote_path_registry_secret }} .
        grep -r -f {{ remote_path_uploader_key }} .
      register: found_pass
      failed_when: found_pass.stdout | length > 0
      changed_when: false

    - name: Check that stage target registry pass are not leaked (if they are present)
      become: true
      become_user: "{{ promoter_user }}"
      shell: |
        cd ~/web/promoter_logs
        grep -r -i "pass.*{{ password }}"
      register: found_pass
      failed_when: found_pass.stdout | length > 0
      changed_when: false
      loop: "{{ stage_info.registries.targets | map(attribute='password') | list }}"
      loop_control:
        loop_var: password
